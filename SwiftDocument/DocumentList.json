[
 {
   "id": 11001,
   "category": "HIG",
   "title": "iOS Design Themes",
   "subtitle": "As an app designer, you have the opportunity to deliver an extraordinary product that rises to the top of the App Store charts.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/overview/themes/"
 },
 {
   "id": 11002,
   "category": "HIG",
   "title": "Interface Essentials",
   "subtitle": "Most iOS apps are built using components from UIKit, a programming framework that defines common interface elements.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/overview/interface-essentials/"
 },
 {
   "id": 11003,
   "category": "HIG",
   "title": "Launching",
   "subtitle": "The launch experience has a significant impact on the way people feel about your app. ",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/launching/"
 },
 {
   "id": 11004,
   "category": "HIG",
   "title": "Onboarding",
   "subtitle": "Onboarding lets you welcome new users and reconnect with returning ones.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/onboarding/"
 },
 {
   "id": 11005,
   "category": "HIG",
   "title": "Loading",
   "subtitle": "When content is loading, a blank or static screen can make it seem like your app is frozen, resulting in confusion and frustration, and potentially causing people to leave your app.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/loading/"
 },
 {
   "id": 11006,
   "category": "HIG",
   "title": "Modality",
   "subtitle": "Modality is a design technique that presents content in a temporary mode that requires an explicit action to exit.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/modality/"
 },
 {
   "id": 11007,
   "category": "HIG",
   "title": "Navigation",
   "subtitle": "People tend to be unaware of an app’s navigation until it doesn’t meet their expectations. ",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/navigation/"
 },
 {
   "id": 11008,
   "category": "HIG",
   "title": "Accessing User Data and Resources",
   "subtitle": "User privacy is paramount. To help people trust your app, it’s crucial to be transparent about the privacy-related data and resources you require and how you use them.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/accessing-user-data/"
 },
 {
   "id": 1109,
   "category": "HIG",
   "title": "Settings",
   "subtitle": "Some apps may need to provide a way to make setup or configuration choices, but most apps can avoid or delay doing so.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/settings/"
 },
 {
   "id": 11010,
   "category": "HIG",
   "title": "3D Touch",
   "subtitle": "On supported devices, people can access additional functionality by applying varying levels of pressure to the touchscreen.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/3d-touch/"
 },
 {
   "id": 11011,
   "category": "HIG",
   "title": "Accounts",
   "subtitle": "Ask people to create an account only if your app’s core functionality requires it; otherwise, let people enjoy your app without one.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/accounts/"
 },
 {
   "id": 11012,
   "category": "HIG",
   "title": "Apple Pencil and Scribble",
   "subtitle": "Apple Pencil is a versatile, intuitive tool for iPad apps that offers pixel‑level precision when jotting notes, sketching, painting, marking up documents, and more.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/apple-pencil-and-scribble/"
 },
 {
   "id": 11013,
   "category": "HIG",
   "title": "Audio",
   "subtitle": "iPhone and iPad can play audio through internal or external speakers, headphones, and wirelessly through Bluetooth or AirPlay-enabled devices.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/audio/"
 },
 {
   "id": 11014,
   "category": "HIG",
   "title": "Data Entry",
   "subtitle": "Whether tapping interface elements or using the keyboard, inputting information can be a tedious process.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/data-entry/"
 },
 {
   "id": 11015,
   "category": "HIG",
   "title": "Drag and Drop",
   "subtitle": "With a single finger, a user can move or duplicate selected photos, text, or other content by dragging the content from one location to another, then raising the finger to drop it.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/drag-and-drop/"
 },
 {
   "id": 11016,
   "category": "HIG",
   "title": "Feedback",
   "subtitle": "Feedback helps people know what an app is doing, discover what they can do next, and understand the results of actions.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/"
 },
 {
   "id": 11017,
   "category": "HIG",
   "title": "File Handling",
   "subtitle": "People shouldn’t need to think about the file system while creating, viewing, and manipulating files.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/file-handling/"
 },
 {
   "id": 11018,
   "category": "HIG",
   "title": "Game Controllers",
   "subtitle": "Game controllers can enhance gameplay and increase people's immersion in a game. ",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/game-controllers/"
 },
 {
   "id": 11019,
   "category": "HIG",
   "title": "Gestures",
   "subtitle": "People interact with an iOS device by performing gestures on the touchscreen.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/gestures/"
 },
 {
   "id": 11020,
   "category": "HIG",
   "title": "Haptics",
   "subtitle": "Haptics engage people’s sense of touch to enhance the experience of interacting with onscreen interfaces.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/haptics/"
 },
 {
   "id": 11021,
   "category": "HIG",
   "title": "Keyboards",
   "subtitle": "The system provides several types of onscreen keyboards, each designed to facilitate a different type of input.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/keyboards/"
 },
 {
   "id": 11022,
   "category": "HIG",
   "title": "Near Field Communication",
   "subtitle": "Near Field Communication (NFC) enables devices within a few centimeters of each other to exchange information wirelessly.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/near-field-communication/"
 },
 {
   "id": 11023,
   "category": "HIG",
   "title": "Pointers (iPadOS)",
   "subtitle": "iPadOS provides dynamic pointer effects and behaviors that enhance the experience of using a pointing device with iPad.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/pointers/"
 },
 {
   "id": 11024,
   "category": "HIG",
   "title": "Spatial Interactions",
   "subtitle": "Spatial interactions enable on-device experiences that integrate the presence of people and objects in the nearby environment.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/spatial-interactions/"
 },
 {
   "id": 11025,
   "category": "HIG",
   "title": "Undo and Redo",
   "subtitle": "Many apps allow people to shake the device to undo and redo certain operations, such as typing or deleting.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/undo-and-redo/"
 },
 {
   "id": 11026,
   "category": "HIG",
   "title": "Augmented Reality",
   "subtitle": "Augmented reality (or AR) lets you deliver immersive, engaging experiences that seamlessly blend virtual objects with the real world.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/augmented-reality/"
 },
 {
   "id": 11027,
   "category": "HIG",
   "title": "Home Screen Quick Actions",
   "subtitle": "Home screen quick actions are a convenient way to perform useful, app-specific actions right from the Home screen.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/home-screen-actions/"
 },
 {
   "id": 11028,
   "category": "HIG",
   "title": "Multitasking and Multiple Windows",
   "subtitle": "Multitasking lets people use the app switcher to switch quickly from one app to another and enables additional experiences on different devices.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/multitasking/"
 },
 {
   "id": 11029,
   "category": "HIG",
   "title": "Notifications",
   "subtitle": "Notifications can give people timely and important information, whether the device is locked or in use.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/notifications/"
 },
 {
   "id": 11030,
   "category": "HIG",
   "title": "Printing",
   "subtitle": "Your app can take advantage of the system’s built-in AirPrint technology to enable wireless printing of images, PDFs, and other content to compatible printers.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/printing/"
 },
 {
   "id": 11031,
   "category": "HIG",
   "title": "Quick Look",
   "subtitle": "Within your app, Quick Look lets people preview Keynote, Numbers, Pages, and PDF documents, as well as images and other types of files, even if your app doesn't support those file formats.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/quick-look/"
 },
 {
   "id": 11032,
   "category": "HIG",
   "title": "Ratings and Reviews",
   "subtitle": "Ratings and reviews help people make informed decisions when considering whether to try out your app.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/ratings-and-reviews/"
 },
 {
   "id": 11033,
   "category": "HIG",
   "title": "Screenshots",
   "subtitle": "A user can capture what’s displayed on their screen by taking a screenshot.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/screenshots/"
 },
 {
   "id": 11034,
   "category": "HIG",
   "title": "TV Providers",
   "subtitle": "Your app can integrate with the TV app and TV Provider Authentication to offer people a highly convenient and consistent entertainment experience.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/system-capabilities/tv-providers/"
 },
 {
   "id": 11035,
   "category": "HIG",
   "title": "Adaptivity and Layout",
   "subtitle": "People generally want to be able to use their favorite apps on all of their devices and in any context.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/adaptivity-and-layout/"
 },
 {
   "id": 11036,
   "category": "HIG",
   "title": "Animation",
   "subtitle": "Beautiful, subtle animation throughout iOS builds a visual sense of connection between people and content onscreen.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/animation/"
 },
 {
   "id": 11037,
   "category": "HIG",
   "title": "Branding",
   "subtitle": "Successful branding involves more than just adding brand assets to your app. Great apps express unique brand identity through smart font, color, and image decisions.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/branding/"
 },
 {
   "id": 11038,
   "category": "HIG",
   "title": "Color",
   "subtitle": "Color is a great way to impart vitality, provide visual continuity, communicate status information, give feedback in response to user actions, and help people visualize data.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/color/"
 },
 {
   "id": 11039,
   "category": "HIG",
   "title": "Dark Mode",
   "subtitle": "In iOS 13.0 and later, people can choose to adopt a dark system-wide appearance called Dark Mode.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/dark-mode/"
 },
 {
   "id": 11040,
   "category": "HIG",
   "title": "Launch Screen",
   "subtitle": "A launch screen appears instantly when your app starts up and is quickly replaced with the app's first screen, giving the impression that your app is fast and responsive.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/launch-screen/"
 },
 {
   "id": 11041,
   "category": "HIG",
   "title": "Materials",
   "subtitle": "iOS provides materials (or blur effects) that create a translucent effect you can use to evoke a sense of depth.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/materials/"
 },
 {
   "id": 11042,
   "category": "HIG",
   "title": "Terminology",
   "subtitle": "Every word in your app is part of a conversation with your users. Use this conversation to help them feel comfortable in your app.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/terminology/"
 },
 {
   "id": 11043,
   "category": "HIG",
   "title": "Typography",
   "subtitle": "Apple provides two type families you can use in your iOS apps.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/typography/"
 },
 {
   "id": 11044,
   "category": "HIG",
   "title": "Video",
   "subtitle": "The system-provided video player offers two viewing modes: full-screen (aspect fill) and fit-to-screen (aspect).",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/video/"
 },
 {
   "id": 11045,
   "category": "HIG",
   "title": "Image Size and Resolution",
   "subtitle": "The coordinate system iOS uses to place content onscreen is based on measurements in points, which map to pixels in the display.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/image-size-and-resolution/"
 },
 {
   "id": 11046,
   "category": "HIG",
   "title": "App Icon",
   "subtitle": "Every app needs a beautiful and memorable icon that attracts attention in the App Store and stands out on the Home screen.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/"
 },
 {
   "id": 11047,
   "category": "HIG",
   "title": "System Icons (iOS 12 and Earlier)",
   "subtitle": "In iOS 13 or later, prefer using SF Symbols to represent tasks and types of content in your app.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/system-icons/"
 },
 {
   "id": 11048,
   "category": "HIG",
   "title": "Navigation Bars",
   "subtitle": "A navigation bar appears at the top of an app screen, below the status bar, and enables navigation through a series of hierarchical screens.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/bars/navigation-bars/"
 },
 {
   "id": 11049,
   "category": "HIG",
   "title": "Search Bars",
   "subtitle": "A search bar allows people to search through a large collection of values by typing text into a field.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/bars/search-bars/"
 },
 {
   "id": 11050,
   "category": "HIG",
   "title": "Sidebars",
   "subtitle": "A sidebar provides app-level navigation and quick access to top-level collections of content in your app.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/bars/sidebars/"
 },
 {
   "id": 11051,
   "category": "HIG",
   "title": "Status Bars",
   "subtitle": "The status bar appears along the upper edge of the screen and displays useful information about the device’s current state, like the time, cellular carrier, and battery level.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/bars/status-bars/"
 },
 {
   "id": 11052,
   "category": "HIG",
   "title": "Tab Bars",
   "subtitle": "A tab bar appears at the bottom of a screen, helping people understand the types of information or functionality an app provides.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/bars/tab-bars/"
 },
 {
   "id": 11053,
   "category": "HIG",
   "title": "Toolbars",
   "subtitle": "A toolbar appears at the bottom of a screen and contains buttons for performing actions relevant to the current view.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/bars/toolbars/"
 },
 {
   "id": 11054,
   "category": "HIG",
   "title": "Action Sheets",
   "subtitle": "An action sheet presents two or more choices related to an intentional user action.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/action-sheets/"
 },
 {
   "id": 11055,
   "category": "HIG",
   "title": "Activity Views",
   "subtitle": "An activity is a task, such as Copy, Favorite, or Find, that’s useful in the current context. ",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/activity-views/"
 },
 {
   "id": 11056,
   "category": "HIG",
   "title": "Alerts",
   "subtitle": "Alerts convey important information related to the state of your app or the device.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/alerts/"
 },
 {
   "id": 11057,
   "category": "HIG",
   "title": "Collections",
   "subtitle": "A collection manages an ordered set of content, such as a set of photos, and presents it in a customizable and highly visual layout.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/collections/"
 },
 {
   "id": 11058,
   "category": "HIG",
   "title": "Image Views",
   "subtitle": "An image view displays a single image or an animated sequence of images over a transparent or opaque background.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/image-views/"
 },
 {
   "id": 11059,
   "category": "HIG",
   "title": "Pages",
   "subtitle": "A page view controller provides a way to implement linear navigation between pages of content, such as in a document, book, notepad, or calendar.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/pages/"
 },
 {
   "id": 11060,
   "category": "HIG",
   "title": "Popovers",
   "subtitle": "A popover is a transient view that appears above other content onscreen when you tap a control or in an area.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/popovers/"
 },
 {
   "id": 11061,
   "category": "HIG",
   "title": "Scroll Views",
   "subtitle": "A scroll view allows users to browse content, such as text in a document or a collection of images, that’s larger than the visible area.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/scroll-views/"
 },
 {
   "id": 11062,
   "category": "HIG",
   "title": "Sheets",
   "subtitle": "A sheet helps people perform a distinct task that’s related to the parent view without taking them away from their current context.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/sheets/"
 },
 {
   "id": 11063,
   "category": "HIG",
   "title": "Split Views",
   "subtitle": "A split view manages the presentation of hierarchical content at the top level of your app.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/split-views/"
 },
 {
   "id": 11064,
   "category": "HIG",
   "title": "Tables",
   "subtitle": "A table presents data as a scrolling, single-column list of rows that can be divided into sections or groups.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/tables/"
 },
 {
   "id": 11065,
   "category": "HIG",
   "title": "Text Views",
   "subtitle": "A text view displays multiline, styled text content. Text views can be any height and enable scrolling when the content extends outside of the view.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/text-views/"
 },
 {
   "id": 11066,
   "category": "HIG",
   "title": "Web Views",
   "subtitle": "A web view loads and displays rich web content, such as embedded HTML and websites, directly within your app.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/views/web-views/"
 },
 {
   "id": 11067,
   "category": "HIG",
   "title": "Buttons",
   "subtitle": "The system offers a range of button styles that support extensive customization while providing built-in interaction states, accessibility support, and appearance adaptation.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/buttons/"
 },
 {
   "id": 11068,
   "category": "HIG",
   "title": "Color Wells",
   "subtitle": "When tapped, a color well displays the system-provided color picker. People can use the color picker to choose a color for text, shapes, marking tools, and other elements.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/color-wells/"
 },
 {
   "id": 11069,
   "category": "HIG",
   "title": "Context Menus",
   "subtitle": "In iOS 13 and later, you can use context menus to give people access to additional functionality related to onscreen items without cluttering the interface.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/context-menus/"
 },
 {
   "id": 11070,
   "category": "HIG",
   "title": "Edit Menus",
   "subtitle": "People can touch and hold or double-tap an element in a text field, a text view, a web view, or an image view to select content and reveal edit options, such as Copy and Paste.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/edit-menus/"
 },
 {
   "id": 11071,
   "category": "HIG",
   "title": "Labels",
   "subtitle": "A label describes an onscreen interface element or provides a short message. Although people can’t edit labels, they can sometimes copy the content of labels.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/labels/"
 },
 {
   "id": 11072,
   "category": "HIG",
   "title": "Page Controls",
   "subtitle": "A page control displays a row of indicator images, each of which represents a page in a flat list.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/page-controls/"
 },
 {
   "id": 11073,
   "category": "HIG",
   "title": "Pickers",
   "subtitle": "A picker can display one or more scrollable lists of distinct values from which people can choose.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/pickers/"
 },
 {
   "id": 11074,
   "category": "HIG",
   "title": "Progress Indicators",
   "subtitle": "Don’t make people sit around staring at a static screen waiting for your app to load content or perform lengthy data processing operations.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/progress-indicators/"
 },
 {
   "id": 11075,
   "category": "HIG",
   "title": "Refresh Content Controls",
   "subtitle": "A refresh control is manually initiated to immediately reload content, typically in a table view, without waiting for the next automatic content update to occur.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/refresh-content-controls/"
 },
 {
   "id": 11076,
   "category": "HIG",
   "title": "Segmented Controls",
   "subtitle": "A segmented control is a linear set of two or more segments, each of which functions as a mutually exclusive button.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/segmented-controls/"
 },
 {
   "id": 11077,
   "category": "HIG",
   "title": "Sliders",
   "subtitle": "A slider is a horizontal track with a control called a thumb, which you can slide with your finger to move between a minimum and maximum value, such as screen brightness level or position during media playback.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/sliders/"
 },
 {
   "id": 11078,
   "category": "HIG",
   "title": "Steppers",
   "subtitle": "A stepper is a two-segment control used to increase or decrease an incremental value.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/steppers/"
 },
 {
   "id": 11079,
   "category": "HIG",
   "title": "Switches",
   "subtitle": "A switch is a visual toggle between two mutually exclusive states — on and off.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/switches/"
 },
 {
   "id": 11080,
   "category": "HIG",
   "title": "Text Fields",
   "subtitle": "A text field is a single-line, fixed-height field that automatically brings up a keyboard when people tap it.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/controls/text-fields/"
 },
 {
   "id": 11081,
   "category": "HIG",
   "title": "Custom Keyboards",
   "subtitle": "You can provide a custom keyboard by creating a keyboard extension that replaces the standard keyboard.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/extensions/custom-keyboards/"
 },
 {
   "id": 11082,
   "category": "HIG",
   "title": "File Providers",
   "subtitle": "A file provider extension implements a custom interface for importing, exporting, opening, or moving an app’s documents from within other apps on the system.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/extensions/file-providers/"
 },
 {
   "id": 11083,
   "category": "HIG",
   "title": "Messaging",
   "subtitle": "iMessage apps and Sticker packs are messaging extensions that let people share content with friends, communicate expressively, and share collaborative experiences.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/extensions/messaging/"
 },
 {
   "id": 11084,
   "category": "HIG",
   "title": "Photo Editing",
   "subtitle": "Photo editing extensions let people modify photos and videos within the Photos app by applying filters or making other changes.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/extensions/photo-editing/"
 },
 {
   "id": 11085,
   "category": "HIG",
   "title": "Sharing and Actions",
   "subtitle": "Share extensions provide a convenient way to share information from the current context with apps, social media accounts, and other services.",
   "link" : "https://developer.apple.com/design/human-interface-guidelines/ios/extensions/sharing-and-actions/"
 },
 {
   "id": 12001,
   "category": "Sketch",
   "title": "The Canvas",
   "subtitle": "The Canvas Canvas is where you create your designs.",
   "link" : "https://www.sketch.com/docs/designing/the-interface/the-canvas/"
 },
 {
   "id": 12002,
   "category": "Sketch",
   "title": "The Toolbar",
   "subtitle": " The toolbar provides quick and easy access to important tools and actions you’ll use a lot in the Mac app.",
   "link" : "https://www.sketch.com/docs/designing/the-interface/the-toolbar/"
 },
 {
   "id": 12003,
   "category": "Sketch",
   "title": "The Inspector",
   "subtitle": "In the Inspector, you’ll find settings for any layers you’ve selected, or controls for the tool or feature you’re using.",
   "link" : "https://www.sketch.com/docs/designing/the-interface/the-inspector/"
 },
 {
   "id": 12004,
   "category": "Sketch",
   "title": "The Layer List",
   "subtitle": "In the Layer List, you can see and select from all of the pages in your document, and see the Artboards and layers on each page.",
   "link" : "https://www.sketch.com/docs/designing/the-interface/the-layer-list/"
 },
 {
   "id": 12005,
   "category": "Sketch",
   "title": "The Components View",
   "subtitle": "In the Components View you’ll find all the Symbols, Text Styles, Layer Styles, and Color Variables in your document.",
   "link" : "https://www.sketch.com/docs/designing/the-interface/the-components-view/"
 },
 {
   "id": 12006,
   "category": "Sketch",
   "title": "The Insert Window",
   "subtitle": "The Insert Window opens separately to the main window. It gives you a fast and easy way to find and insert Symbols, Text Styles, Layer Styles and Color Variables – from your document or any of your Libraries.",
   "link" : "https://www.sketch.com/docs/designing/the-interface/the-insert-window/"
 },
 {
   "id": 12007,
   "category": "Sketch",
   "title": "Adding layers",
   "subtitle": "To add a layer, click the Insert + button in the toolbar or the Insert menu item in the menu bar. From there, select the type of layer you want to add.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/adding-layers/"
 },
 {
   "id": 12008,
   "category": "Sketch",
   "title": "Selecting layers",
   "subtitle": "To select a layer on the Canvas, simply click on it. When you do this, you’ll see selection handles appear around that layer.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/selecting-layers/"
 },
 {
   "id": 12009,
   "category": "Sketch",
   "title": "Grouping Layers",
   "subtitle": "By grouping multiple layers together, you can do things like move and resize them all at the same time, toggle their visibility together, or adjust their properties like opacity and blend mode blending.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/grouping-layers/"
 },
 {
   "id": 12010,
   "category": "Sketch",
   "title": "Moving layers",
   "subtitle": "To move a layer, simply click and drag it. If you want to restrict movement to a particular axis, hold ⇧ as you drag.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/moving-layers/"
 },
 {
   "id": 12011,
   "category": "Sketch",
   "title": "Rotating layers",
   "subtitle": "To rotate a layer hold ⌘ and click on any of the corner selection handles to rotate it in the direction you want.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/rotating-layers/"
 },
 {
   "id": 12012,
   "category": "Sketch",
   "title": "Duplicating layers",
   "subtitle": "To duplicate a layer on your Canvas, hold down ⌥ and drag the layer. It’ll keep the original in its place.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/duplicating-layers/"
 },
 {
   "id": 12013,
   "category": "Sketch",
   "title": "Aligning layers",
   "subtitle": "You can align layers using the six alignment buttons in the top row of the Inspector and hover over each one of them to preview how they’ll look.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/aligning-layers/"
 },
 {
   "id": 12014,
   "category": "Sketch",
   "title": "Resizing layers",
   "subtitle": "To resize a layer, select it, then click and drag on any of its selection handles. Handles on the sides of the layer will adjust the height or width, while handles on the corners will adjust the height and width together.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/resizing-layers/"
 },
 {
   "id": 12015,
   "category": "Sketch",
   "title": "Scaling layers",
   "subtitle": "Any styles you’ve applied (such as a strokes, border radius or shadow sizes) will stay the same when you resize a layer. To have them scale proportionately with your layer size, head to Layer > Transform > Scale… or press ⌘K.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/scaling-layers/"
 },
 {
   "id": 12016,
   "category": "Sketch",
   "title": "Resizing constraints",
   "subtitle": "The resizing constraints in the Inspector let you choose how layers behave when you resize the Artboard, group or symbol they’re a part of.",
   "link" : "https://www.sketch.com/docs/designing/layer-basics/resizing-constraints/"
 },
 {
   "id": 12017,
   "category": "Sketch",
   "title": "Adding shapes",
   "subtitle": "Shapes are one the most common types of layers in Sketch documents. You can add and edit pre-made shapes, or create your own using the Vector tool Vector tool.",
   "link" : "https://www.sketch.com/docs/designing/shapes/adding-shapes/"
 },
 {
   "id": 12018,
   "category": "Sketch",
   "title": "Editing shapes",
   "subtitle": "Shapes are one the most common types of layers in Sketch documents. You can add and edit pre-made shapes, or create your own using the Vector tool Vector tool.",
   "link" : "https://www.sketch.com/docs/designing/shapes/editing-shapes/"
 },
 {
   "id": 12019,
   "category": "Sketch",
   "title": "Boolean Operations",
   "subtitle": "In the Mac app, there are four boolean operations you can use to combine and create complex shapes.",
   "link" : "https://www.sketch.com/docs/designing/shapes/boolean-operations/"
 },
 {
   "id": 12020,
   "category": "Sketch",
   "title": "Masking shapes",
   "subtitle": "There are a few different ways to create masks in the Mac app, but they all follow the same rule: we’ll use the shape that’s lowest in the Layer List as the mask.",
   "link" : "https://www.sketch.com/docs/designing/shapes/masking-shapes/"
 },
 {
   "id": 12021,
   "category": "Sketch",
   "title": "Vector Editing",
   "subtitle": "Shapes are one the most common types of layers in Sketch documents. You can add and edit pre-made shapes, or create your own using the Vector tool Vector tool.",
   "link" : "https://www.sketch.com/docs/designing/vector-editing/"
 },
 {
   "id": 12022,
   "category": "Sketch",
   "title": "Text",
   "subtitle": "Adding text, Text options, Converting text to vector shapes, Managing fonts",
   "link" : "https://www.sketch.com/docs/designing/text/"
 },
 {
   "id": 12023,
   "category": "Sketch",
   "title": "Images",
   "subtitle": "As well as adding image fills Image Fill and images from data sources dataset to existing layers, you can also add regular bitmap images into your Sketch documents.",
   "link" : "https://www.sketch.com/docs/designing/images/"
 },
 {
   "id": 12024,
   "category": "Sketch",
   "title": "Data",
   "subtitle": "With the Data tool dataset, you can add different images and text to your designs to create realistic mockups and prototypes.",
   "link" : "https://www.sketch.com/docs/designing/data/"
 },
 {
   "id": 12025,
   "category": "Sketch",
   "title": "Fills",
   "subtitle": "The Mac app support five different fill types:",
   "link" : "https://www.sketch.com/docs/designing/styling/fills/"
 },
 {
   "id": 12026,
   "category": "Sketch",
   "title": "The color popover",
   "subtitle": "Click the color well for any fill, border or shadow to reveal the color picker popover.",
   "link" : "https://www.sketch.com/docs/designing/styling/the-color-popover/"
 },
 {
   "id": 12027,
   "category": "Sketch",
   "title": "Color Variables",
   "subtitle": "With Color Variables, you can set colors that synchronize across your document. When you make changes to a Color Variable, those changes appear across all of the layers that use it.",
   "link" : "https://www.sketch.com/docs/designing/styling/color-variables/"
 },
 {
   "id": 12028,
   "category": "Sketch",
   "title": "Presets",
   "subtitle": "At the bottom of the color popover, you can store gradient or image fill presets for quick access and reuse within your document or as part of a library.",
   "link" : "https://www.sketch.com/docs/designing/styling/presets/"
 },
 {
   "id": 12029,
   "category": "Sketch",
   "title": "Gradients",
   "subtitle": "To apply a gradient fill to a layer, click the color button Oval under the Fills section of the Inspector, then choose either the linear Linear Gradient, radial Radial Gradient or angular gradient Angular Gradient buttons at the top of the popover.",
   "link" : "https://www.sketch.com/docs/designing/styling/gradients/"
 },
 {
   "id": 12030,
   "category": "Sketch",
   "title": "Tints",
   "subtitle": "Tints apply a single color to an entire group or Symbol. Unlike fills, Tints respect semi-filled elements with different opacities and borders.",
   "link" : "https://www.sketch.com/docs/designing/styling/tints/"
 },
 {
   "id": 12031,
   "category": "Sketch",
   "title": "Borders",
   "subtitle": "You can add as many borders as you like to your layers, with different thicknesses, colors and blend modes.",
   "link" : "https://www.sketch.com/docs/designing/styling/borders/"
 },
 {
   "id": 12032,
   "category": "Sketch",
   "title": "Shadows",
   "subtitle": "Shadows and inner Shadows have the same controls but work in different ways.",
   "link" : "https://www.sketch.com/docs/designing/styling/shadows/"
 },
 {
   "id": 12033,
   "category": "Sketch",
   "title": "Blurs",
   "subtitle": "To add a blur to your layer, click the Blurs title in the Inspector and then choose a blur type from the drop-down menu:",
   "link" : "https://www.sketch.com/docs/designing/styling/blurs/"
 },
 {
   "id": 12034,
   "category": "Sketch",
   "title": "Symbols",
   "subtitle": "Symbols Symbol instance can speed up your workflow by giving you a way to save and reuse common elements across your designs.",
   "link" : "https://www.sketch.com/docs/designing/symbols/"
 },
 {
   "id": 12035,
   "category": "Sketch",
   "title": "Real-time Collaboration",
   "subtitle": "With real-time collaboration, you can work together on the same document, see everyone’s changes instantly, and never have to wonder about whether you’re editing the right version of a document again.",
   "link" : "https://www.sketch.com/docs/designing/real-time-collaboration/"
 },
 {
   "id": 12036,
   "category": "Sketch",
   "title": "Libraries",
   "subtitle": "Libraries are Sketch documents with Components (Symbols, Text Styles, Color Variables and Layer Styles) that you can share across all of your other documents — and even across whole teams.",
   "link" : "https://www.sketch.com/docs/designing/libraries/"
 },
 {
   "id": 12037,
   "category": "Sketch",
   "title": "Shortcuts",
   "subtitle": "Keyboard shortcuts are the fastest way to speed up your workflow. Many of them are depend on what you’ve selected and what you’re doing, but you’ll find the full list of Sketch keyboard shortcuts below.",
   "link" : "https://www.sketch.com/docs/designing/shortcuts/"
 },
 {
   "id": 12038,
   "category": "Sketch",
   "title": "Color Profiles",
   "subtitle": "Color profiles describe how the colors in an image should be rendered, which helps maintain accuracy across different screens.",
   "link" : "https://www.sketch.com/docs/designing/color-profiles/"
 },
 {
   "id": 12039,
   "category": "Sketch",
   "title": "Document Settings",
   "subtitle": "The Document Settings window brings together document-specific settings and preferences, like Assistants or missing fonts, to help you manage your document from a single place.",
   "link" : "https://www.sketch.com/docs/designing/document-settings/"
 },
 {
   "id": 12040,
   "category": "Sketch",
   "title": "Templates",
   "subtitle": "You can open templates template as a new document with pre-populated layers. The Mac app comes with several useful sample templates, including the iOS App Icon and Material Design templates.",
   "link" : "https://www.sketch.com/docs/designing/templates/"
 },
 {
   "id": 12041,
   "category": "Sketch",
   "title": "Assistants",
   "subtitle": "When you add Assistants to your document, they’ll check your designs against a set of rules and let you know if they spot issues or inconsistencies.",
   "link" : "https://www.sketch.com/docs/designing/assistants/"
 },
 {
   "id": 12042,
   "category": "Sketch",
   "title": "Prototyping",
   "subtitle": "With Prototyping, you can preview your designs and navigate between Artboards with animated interactions.",
   "link" : "https://www.sketch.com/docs/prototyping/"
 },
 {
   "id": 12043,
   "category": "Sketch",
   "title": "Importing & Exporting",
   "subtitle": "Discover export presets, slices and learn how to export CSS and SVG code from any browser. Also, learn how to easily import other files into the Mac app.",
   "link" : "https://www.sketch.com/docs/importing-and-exporting/"
 },
 {
   "id": 12044,
   "category": "Sketch",
   "title": "Preferences",
   "subtitle": "Learn how to add Libraries, Data sources or Plugins and set your preferences in the Mac app. Press ⌘, from anywhere in the Mac app, or choose Sketch > Preferences to bring up the preferences window.",
   "link" : "https://www.sketch.com/docs/preferences/"
 },
 {
   "id": 12045,
   "category": "Sketch",
   "title": "Plugins",
   "subtitle": "Plugins allow you to do even more with the Mac app by extending the app’s functionality. They’re mostly created by third-party developers though there are a number of official Sketch plugins too. ",
   "link" : "https://www.sketch.com/docs/plugins/"
 },
 {
   "id": 12046,
   "category": "Sketch",
   "title": "Canvas view",
   "subtitle": "By default, when you browse Workspace documents in the web app it was in a grid view.",
   "link" : "https://www.sketch.com/docs/canvas-view/"
 },
 {
   "id": 12047,
   "category": "Sketch",
   "title": "Managing documents",
   "subtitle": "Learn how to manage your documents — from saving your work to using document updates in your Workspace.",
   "link" : "https://www.sketch.com/docs/managing-documents/"
 },
 {
   "id": 12048,
   "category": "Sketch",
   "title": "Sharing & Permissions",
   "subtitle": "Learn how to share your designs and give the right permissions to other people, whether they are part of your Workspace or not.",
   "link" : "https://www.sketch.com/docs/sharing-and-permissions/"
 },
 {
   "id": 12049,
   "category": "Sketch",
   "title": "Comments & Notifications",
   "subtitle": "Bring ideas and feedback together — learn how to use comments and threads in the web app to get feedback from colleagues, stakeholders or anyone you share your designs with.",
   "link" : "https://www.sketch.com/docs/comments-and-notifications/"
 },
 {
   "id": 12050,
   "category": "Sketch",
   "title": "Developer Handoff",
   "subtitle": "earn how developers can inspect your designs and export assets in our web app — no Mac required.",
   "link" : "https://www.sketch.com/docs/developer-handoff/"
 },
 {
   "id": 12051,
   "category": "Sketch",
   "title": "Subscriptions and Licenses",
   "subtitle": "Over the past few years, we’ve evolved Sketch to be more than the Mac app. It’s now a complete platform for design and collaboration, combining the best native Mac editor with tools that work in any web browser.",
   "link" : "https://www.sketch.com/docs/subscriptions/"
 },
 {
   "id": 12052,
   "category": "Sketch",
   "title": "Single Sign-On (SSO)",
   "subtitle": "Single Sign-On (SSO) gives members in our Business Plan a quick and safe way to log in to both the Mac app and web app.",
   "link" : "https://www.sketch.com/docs/sso/"
 },
 {
    "id": 21001,
    "category": "SwiftUI",
    "title": "App",
    "subtitle": "A type that represents the structure and behavior of an app.",
    "link" : "https://developer.apple.com/documentation/swiftui/app"
  },
  {
    "id": 21002,
    "category": "SwiftUI",
    "title": "UILaunchScreen",
    "subtitle": "The user interface to show while an app launches.",
    "link" : "https://developer.apple.com/documentation/bundleresources/information_property_list/uilaunchscreen"
  },
  {
    "id": 21003,
   "category": "SwiftUI",
    "title": "UILaunchScreens",
    "subtitle": "The user interfaces to show while an app launches in response to different URL schemes.",
    "link" : "https://developer.apple.com/documentation/bundleresources/information_property_list/uilaunchscreens"
  },
  {
    "id": 21004,
   "category": "SwiftUI",
    "title": "NSApplicationDelegateAdaptor",
    "subtitle": "A property wrapper type that you use to create an AppKit app delegate.",
    "link" : "https://developer.apple.com/documentation/swiftui/nsapplicationdelegateadaptor"
  },
  {
    "id": 21005,
   "category": "SwiftUI",
    "title": "UIApplicationDelegateAdaptor",
    "subtitle": "A property wrapper type that you use to create a UIKit app delegate.",
    "link" : "https://developer.apple.com/documentation/swiftui/uiapplicationdelegateadaptor"
  },
  {
    "id": 21006,
   "category": "SwiftUI",
    "title": "WKExtensionDelegateAdaptor",
    "subtitle": "A property wrapper type that you use to create a WatchKit extension delegate.",
    "link" : "https://developer.apple.com/documentation/swiftui/wkextensiondelegateadaptor"
  },
  {
    "id": 21007,
   "category": "SwiftUI",
    "title": "ColorScheme",
    "subtitle": "The possible color schemes, corresponding to the light and dark appearances.",
    "link" : "https://developer.apple.com/documentation/swiftui/colorscheme"
  },
  {
    "id": 21008,
   "category": "SwiftUI",
    "title": "ColorSchemeContrast",
    "subtitle": "The contrast between the app’s foreground and background colors.",
    "link" : "https://developer.apple.com/documentation/swiftui/colorschemecontrast"
  },
  {
    "id": 21009,
   "category": "SwiftUI",
    "title": "EditMode",
    "subtitle": "A mode that indicates whether the user can edit a view’s content.",
    "link" : "https://developer.apple.com/documentation/swiftui/editmode"
  },
  {
    "id": 21010,
   "category": "SwiftUI",
    "title": "UserInterfaceSizeClass",
    "subtitle": "A set of values that indicate the visual size available to the view.",
    "link" : "https://developer.apple.com/documentation/swiftui/userinterfacesizeclass"
  },
  {
    "id": 21011,
   "category": "SwiftUI",
    "title": "DismissAction",
    "subtitle": "An action that dismisses a presentation.",
    "link" : "https://developer.apple.com/documentation/swiftui/dismissaction"
  },
  {
    "id": 21012,
   "category": "SwiftUI",
    "title": "DismissSearchAction",
    "subtitle": "An action that can end a search interaction.",
    "link" : "https://developer.apple.com/documentation/swiftui/dismisssearchaction"
  },
  {
    "id": 21013,
   "category": "SwiftUI",
    "title": "OpenURLAction",
    "subtitle": "An action that opens a URL.",
    "link" : "https://developer.apple.com/documentation/swiftui/openurlaction"
  },
  {
    "id": 21014,
   "category": "SwiftUI",
    "title": "RefreshAction",
    "subtitle": "An action that initiates a refresh operation.",
    "link" : "https://developer.apple.com/documentation/swiftui/refreshaction"
  },
  {
    "id": 21015,
   "category": "SwiftUI",
    "title": "ResetFocusAction",
    "subtitle": "An environment value that provides the ability to reevaluate default focus.",
    "link" : "https://developer.apple.com/documentation/swiftui/resetfocusaction"
  },
  {
    "id": 21016,
   "category": "SwiftUI",
    "title": "Scene",
    "subtitle": "A part of an app’s user interface with a life cycle managed by the system.",
    "link" : "https://developer.apple.com/documentation/swiftui/scene"
  },
  {
    "id": 21017,
   "category": "SwiftUI",
    "title": "ScenePhase",
    "subtitle": "An indication of a scene’s operational state.",
    "link" : "https://developer.apple.com/documentation/swiftui/scenephase"
  },
  {
    "id": 21018,
   "category": "SwiftUI",
    "title": "SceneBuilder",
    "subtitle": "A result builder for composing a collection of scenes into a single composite scene.",
    "link" : "https://developer.apple.com/documentation/swiftui/scenebuilder"
  },
  {
    "id": 21019,
   "category": "SwiftUI",
    "title": "WindowGroup",
    "subtitle": "A scene that presents a group of identically structured windows.",
    "link" : "https://developer.apple.com/documentation/swiftui/windowgroup"
  },
  {
    "id": 21020,
   "category": "SwiftUI",
    "title": "Documents",
    "subtitle": "Declare a kind of scene that enables users to open documents.",
    "link" : "https://developer.apple.com/documentation/swiftui/documents"
  },
  {
    "id": 21021,
   "category": "SwiftUI",
    "title": "Settings",
    "subtitle": "A scene that presents an interface for viewing and modifying an app’s settings.",
    "link" : "https://developer.apple.com/documentation/swiftui/settings"
  },
  {
    "id": 21022,
   "category": "SwiftUI",
    "title": "WKNotificationScene",
    "subtitle": "A scene which appears in response to receiving the specified category of remote or local notifications.",
    "link" : "https://developer.apple.com/documentation/swiftui/wknotificationscene"
  },
  {
    "id": 21023,
   "category": "SwiftUI",
    "title": "Commands",
    "subtitle": "Conforming types represent a group of related commands that can be exposed to the user via the main menu on macOS and key commands on iOS.",
    "link" : "https://developer.apple.com/documentation/swiftui/commands"
  },
  {
    "id": 21024,
   "category": "SwiftUI",
    "title": "CommandMenu",
    "subtitle": "Command menus are stand-alone, top-level containers for controls that perform related, app-specific commands.",
    "link" : "https://developer.apple.com/documentation/swiftui/commandmenu"
  },
  {
    "id": 21025,
   "category": "SwiftUI",
    "title": "CommandGroup",
    "subtitle": "Command groups describe additional groupings of controls to add to existing command menus.",
    "link" : "https://developer.apple.com/documentation/swiftui/commandgroup"
  },
  {
    "id": 21026,
   "category": "SwiftUI",
    "title": "CommandsBuilder",
    "subtitle": "Constructs command sets from multi-expression closures. Like ViewBuilder, it supports up to ten expressions in the closure body.",
    "link" : "https://developer.apple.com/documentation/swiftui/commandsbuilder"
  },
  {
    "id": 21027,
   "category": "SwiftUI",
    "title": "CommandGroupPlacement",
    "subtitle": "Identifier types for standard locations that new command groups can be placed relative to.",
    "link" : "https://developer.apple.com/documentation/swiftui/commandgroupplacement"
  },
  {
    "id": 21028,
   "category": "SwiftUI",
    "title": "SidebarCommands",
    "subtitle": "A built-in set of commands for manipulating window sidebars.",
    "link" : "https://developer.apple.com/documentation/swiftui/sidebarcommands"
  },
  {
    "id": 21029,
   "category": "SwiftUI",
    "title": "TextEditingCommands",
    "subtitle": "A built-in group of commands for searching, editing, and transforming selections of text.",
    "link" : "https://developer.apple.com/documentation/swiftui/texteditingcommands"
  },
  {
    "id": 21030,
   "category": "SwiftUI",
    "title": "ToolbarCommands",
    "subtitle": "A built-in set of commands for manipulating window toolbars.",
    "link" : "https://developer.apple.com/documentation/swiftui/toolbarcommands"
  },
  {
    "id": 21031,
   "category": "SwiftUI",
    "title": "ImportFromDevicesCommands",
    "subtitle": "A built-in set of commands that enables importing content from nearby devices.",
    "link" : "https://developer.apple.com/documentation/swiftui/importfromdevicescommands"
  },
  {
    "id": 21032,
   "category": "SwiftUI",
    "title": "EmptyCommands",
    "subtitle": "An empty group of commands.",
    "link" : "https://developer.apple.com/documentation/swiftui/emptycommands"
  },
  {
    "id": 21033,
   "category": "SwiftUI",
    "title": "Creating a Widget Extension",
    "subtitle": "Add and configure an extension to show your app’s content on the Home screen, Today View, or Notification Center.",
    "link" : "https://developer.apple.com/documentation/WidgetKit/Creating-a-Widget-Extension"
  },
  {
    "id": 21034,
   "category": "SwiftUI",
    "title": "Keeping a Widget Up To Date",
    "subtitle": "Plan your widget’s timeline to show timely, relevant information using dynamic views, and update the timeline when things change.",
    "link" : "https://developer.apple.com/documentation/WidgetKit/Keeping-a-Widget-Up-To-Date"
  },
  {
    "id": 21035,
   "category": "SwiftUI",
    "title": "Making a Configurable Widget",
    "subtitle": "Give users the option to customize their widgets, by adding a custom SiriKit intent definition to your project.",
    "link" : "https://developer.apple.com/documentation/WidgetKit/Making-a-Configurable-Widget"
  },
  {
    "id": 21036,
   "category": "SwiftUI",
    "title": "Widget",
    "subtitle": "The configuration and content of a widget to display on the Home screen or in Notification Center.",
    "link" : "https://developer.apple.com/documentation/swiftui/widget"
  },
  {
    "id": 21037,
   "category": "SwiftUI",
    "title": "WidgetBundle",
    "subtitle": "A container used to expose multiple widgets from a single widget extension.",
    "link" : "https://developer.apple.com/documentation/swiftui/widgetbundle"
  },
  {
    "id": 21038,
   "category": "SwiftUI",
    "title": "Managing User Interface State",
    "subtitle": "Encapsulate view-specific data within your app’s view hierarchy to make your views reusable.",
    "link" : "https://developer.apple.com/documentation/swiftui/managing-user-interface-state"
  },
  {
    "id": 21039,
   "category": "SwiftUI",
    "title": "State",
    "subtitle": "A property wrapper type that can read and write a value managed by SwiftUI.",
    "link" : "https://developer.apple.com/documentation/swiftui/state"
  },
  {
    "id": 21040,
   "category": "SwiftUI",
    "title": "Binding",
    "subtitle": "A property wrapper type that can read and write a value owned by a source of truth.",
    "link" : "https://developer.apple.com/documentation/swiftui/binding"
  },
  {
    "id": 21041,
   "category": "SwiftUI",
    "title": "Managing Model Data in Your App",
    "subtitle": "Create connections between your app’s data model and views.",
    "link" : "https://developer.apple.com/documentation/swiftui/managing-model-data-in-your-app"
  },
  {
    "id": 21042,
   "category": "SwiftUI",
    "title": "ObservedObject",
    "subtitle": "A property wrapper type that subscribes to an observable object and invalidates a view whenever the observable object changes.",
    "link" : "https://developer.apple.com/documentation/swiftui/observedobject"
  },
  {
    "id": 21043,
   "category": "SwiftUI",
    "title": "EnvironmentObject",
    "subtitle": "A property wrapper type for an observable object supplied by a parent or ancestor view.",
    "link" : "https://developer.apple.com/documentation/swiftui/environmentobject"
  },
  {
    "id": 21044,
   "category": "SwiftUI",
    "title": "StateObject",
    "subtitle": "A property wrapper type that instantiates an observable object.",
    "link" : "https://developer.apple.com/documentation/swiftui/stateobject"
  },
  {
    "id": 21045,
   "category": "SwiftUI",
    "title": "ObservableObject",
    "subtitle": "A type of object with a publisher that emits before the object has changed.",
    "link" : "https://developer.apple.com/documentation/Combine/ObservableObject"
  },
  {
    "id": 21046,
   "category": "SwiftUI",
    "title": "Environment",
    "subtitle": "A property wrapper that reads a value from a view’s environment.",
    "link" : "https://developer.apple.com/documentation/swiftui/environment"
  },
  {
    "id": 21047,
   "category": "SwiftUI",
    "title": "EnvironmentValues",
    "subtitle": "A collection of environment values propagated through a view hierarchy.",
    "link" : "https://developer.apple.com/documentation/swiftui/environmentvalues"
  },
  {
    "id": 21048,
   "category": "SwiftUI",
    "title": "EnvironmentKey",
    "subtitle": "A key for accessing values in the environment.",
    "link" : "https://developer.apple.com/documentation/swiftui/environmentkey"
  },
  {
    "id": 21049,
   "category": "SwiftUI",
    "title": "PreferenceKey",
    "subtitle": "A named value produced by a view.",
    "link" : "https://developer.apple.com/documentation/swiftui/preferencekey"
  },
  {
    "id": 21050,
   "category": "SwiftUI",
    "title": "AppStorage",
    "subtitle": "A property wrapper type that reflects a value from UserDefaults and invalidates a view on a change in value in that user default.",
    "link" : "https://developer.apple.com/documentation/swiftui/appstorage"
  },
  {
    "id": 21051,
   "category": "SwiftUI",
    "title": "SceneStorage",
    "subtitle": "A property wrapper type that reads and writes to persisted, per-scene storage.",
    "link" : "https://developer.apple.com/documentation/swiftui/scenestorage"
  },
  {
    "id": 21052,
   "category": "SwiftUI",
    "title": "FetchRequest",
    "subtitle": "A property wrapper type that retrieves entities from a Core Data persistent store.",
    "link" : "https://developer.apple.com/documentation/swiftui/fetchrequest"
  },
  {
    "id": 21053,
   "category": "SwiftUI",
    "title": "FetchedResults",
    "subtitle": "A collection of results retrieved from a Core Data store.",
    "link" : "https://developer.apple.com/documentation/swiftui/fetchedresults"
  },
  {
    "id": 21054,
   "category": "SwiftUI",
    "title": "SectionedFetchRequest",
    "subtitle": "A property wrapper type that retrieves entities, grouped into sections, from a Core Data persistent store.",
    "link" : "https://developer.apple.com/documentation/swiftui/sectionedfetchrequest"
  },
  {
    "id": 21055,
   "category": "SwiftUI",
    "title": "SectionedFetchResults",
    "subtitle": "A collection of results retrieved from a Core Data persistent store, grouped into sections.",
    "link" : "https://developer.apple.com/documentation/swiftui/sectionedfetchresults"
  },
  {
    "id": 21056,
   "category": "SwiftUI",
    "title": "DynamicProperty",
    "subtitle": "An interface for a stored variable that updates an external property of a view.",
    "link" : "https://developer.apple.com/documentation/swiftui/dynamicproperty"
  },
  {
    "id": 21057,
   "category": "SwiftUI",
    "title": "View",
    "subtitle": "A type that represents part of your app’s user interface and provides modifiers that you use to configure views.",
    "link" : "https://developer.apple.com/documentation/swiftui/view"
  },
  {
    "id": 21058,
   "category": "SwiftUI",
    "title": "ViewBuilder",
    "subtitle": "A custom parameter attribute that constructs views from closures.",
    "link" : "https://developer.apple.com/documentation/swiftui/viewbuilder"
  },
  {
    "id": 21059,
   "category": "SwiftUI",
    "title": "Configuring Views",
    "subtitle": "Adjust the characteristics of a view by applying view modifiers.",
    "link" : "https://developer.apple.com/documentation/swiftui/configuring-views"
  },
  {
    "id": 21060,
   "category": "SwiftUI",
    "title": "Reducing View Modifier Maintenance",
    "subtitle": "Bundle view modifiers that you regularly reuse into a custom view modifier.",
    "link" : "https://developer.apple.com/documentation/swiftui/reducing-view-modifier-maintenance"
  },
  {
    "id": 21061,
   "category": "SwiftUI",
    "title": "ViewModifier",
    "subtitle": "A modifier that you apply to a view or another view modifier, producing a different version of the original value.",
    "link" : "https://developer.apple.com/documentation/swiftui/viewmodifier"
  },
  {
    "id": 21062,
   "category": "SwiftUI",
    "title": "EmptyModifier",
    "subtitle": "An empty, or identity, modifier, used during development to switch modifiers at compile time.",
    "link" : "https://developer.apple.com/documentation/swiftui/emptymodifier"
  },
  {
    "id": 21063,
   "category": "SwiftUI",
    "title": "ModifiedContent",
    "subtitle": "A value with a modifier applied to it.",
    "link" : "https://developer.apple.com/documentation/swiftui/modifiedcontent"
  },
  {
    "id": 21064,
   "category": "SwiftUI",
    "title": "EnvironmentalModifier",
    "subtitle": "A modifier that must resolve to a concrete modifier in an environment before use.",
    "link" : "https://developer.apple.com/documentation/swiftui/environmentalmodifier"
  },
  {
    "id": 21065,
   "category": "SwiftUI",
    "title": "AnyView",
    "subtitle": "A type-erased view.",
    "link" : "https://developer.apple.com/documentation/swiftui/anyview"
  },
  {
    "id": 21066,
   "category": "SwiftUI",
    "title": "EmptyView",
    "subtitle": "A view that doesn’t contain any content.",
    "link" : "https://developer.apple.com/documentation/swiftui/emptyview"
  },
  {
    "id": 21067,
   "category": "SwiftUI",
    "title": "EquatableView",
    "subtitle": "A view type that compares itself against its previous value and prevents its child updating if its new value is the same as its old value.",
    "link" : "https://developer.apple.com/documentation/swiftui/equatableview"
  },
  {
    "id": 21068,
   "category": "SwiftUI",
    "title": "SubscriptionView",
    "subtitle": "A view that subscribes to a publisher with an action.",
    "link" : "https://developer.apple.com/documentation/swiftui/subscriptionview"
  },
  {
    "id": 21069,
   "category": "SwiftUI",
    "title": "TupleView",
    "subtitle": "A View created from a swift tuple of View values.",
    "link" : "https://developer.apple.com/documentation/swiftui/tupleview"
  },
  {
    "id": 21070,
   "category": "SwiftUI",
    "title": "Deprecated Views and Controls",
    "subtitle": "Review unsupported views and their replacements.",
    "link" : "https://developer.apple.com/documentation/swiftui/views-and-controls-deprecated"
  },
  {
    "id": 21071,
   "category": "SwiftUI",
    "title": "Text",
    "subtitle": "A view that displays one or more lines of read-only text.",
    "link" : "https://developer.apple.com/documentation/swiftui/text"
  },
  {
    "id": 21072,
   "category": "SwiftUI",
    "title": "Label",
    "subtitle": "A standard label for user interface items, consisting of an icon with a title.",
    "link" : "https://developer.apple.com/documentation/swiftui/label"
  },
  {
    "id": 21073,
   "category": "SwiftUI",
    "title": "TextSelectability",
    "subtitle": "A type that describes the ability to select text.",
    "link" : "https://developer.apple.com/documentation/swiftui/textselectability"
  },
  {
    "id": 21074,
   "category": "SwiftUI",
    "title": "TextField",
    "subtitle": "A control that displays an editable text interface.",
    "link" : "https://developer.apple.com/documentation/swiftui/textfield"
  },
  {
    "id": 21075,
   "category": "SwiftUI",
    "title": "SecureField",
    "subtitle": "A control into which the user securely enters private text.",
    "link" : "https://developer.apple.com/documentation/swiftui/securefield"
  },
  {
    "id": 21076,
   "category": "SwiftUI",
    "title": "TextEditor",
    "subtitle": "A view that can display and edit long-form text.",
    "link" : "https://developer.apple.com/documentation/swiftui/texteditor"
  },
  {
    "id": 21077,
   "category": "SwiftUI",
    "title": "TextInputAutocapitalization",
    "subtitle": "The kind of autocapitalization behavior applied during text input.",
    "link" : "https://developer.apple.com/documentation/swiftui/textinputautocapitalization"
  },
  {
    "id": 21078,
   "category": "SwiftUI",
    "title": "Font",
    "subtitle": "An environment-dependent font.",
    "link" : "https://developer.apple.com/documentation/swiftui/font"
  },
  {
    "id": 21079,
   "category": "SwiftUI",
    "title": "ScaledMetric",
    "subtitle": "A dynamic property that scales a numeric value.",
    "link" : "https://developer.apple.com/documentation/swiftui/scaledmetric"
  },
  {
    "id": 21080,
   "category": "SwiftUI",
    "title": "Text.Case",
    "subtitle": "A scheme for transforming the capitalization of characters within text.",
    "link" : "https://developer.apple.com/documentation/swiftui/text/case"
  },
  {
    "id": 21081,
   "category": "SwiftUI",
    "title": "Text.DateStyle",
    "subtitle": "A predefined style used to display a Date.",
    "link" : "https://developer.apple.com/documentation/swiftui/text/datestyle"
  },
  {
    "id": 21082,
   "category": "SwiftUI",
    "title": "Text.LineStyle",
    "subtitle": "Description of the style used to draw the line for StrikethroughStyleAttribute and UnderlineStyleAttribute.",
    "link" : "https://developer.apple.com/documentation/swiftui/text/linestyle"
  },
  {
    "id": 21083,
   "category": "SwiftUI",
    "title": "LegibilityWeight",
    "subtitle": "The Accessibility Bold Text user setting options.",
    "link" : "https://developer.apple.com/documentation/swiftui/legibilityweight"
  },
  {
    "id": 21084,
   "category": "SwiftUI",
    "title": "DynamicTypeSize",
    "subtitle": "A Dynamic Type size, which specifies how large scalable content should be.",
    "link" : "https://developer.apple.com/documentation/swiftui/dynamictypesize"
  },
  {
    "id": 21085,
   "category": "SwiftUI",
    "title": "RedactionReasons",
    "subtitle": "The reasons to apply a redaction to data displayed on screen.",
    "link" : "https://developer.apple.com/documentation/swiftui/redactionreasons"
  },
  {
    "id": 21086,
   "category": "SwiftUI",
    "title": "TextAlignment",
    "subtitle": "An alignment position for text along the horizontal axis.",
    "link" : "https://developer.apple.com/documentation/swiftui/textalignment"
  },
  {
    "id": 21087,
   "category": "SwiftUI",
    "title": "Text.TruncationMode",
    "subtitle": "The type of truncation to apply to a line of text when it’s too long to fit in the available space.",
    "link" : "https://developer.apple.com/documentation/swiftui/text/truncationmode"
  },
  {
    "id": 21088,
   "category": "SwiftUI",
    "title": "LayoutDirection",
    "subtitle": "No overview available.",
    "link" : "https://developer.apple.com/documentation/swiftui/layoutdirection"
  },
  {
    "id": 21089,
   "category": "SwiftUI",
    "title": "Preparing Views for Localization",
    "subtitle": "Specify hints and add strings to localize your SwiftUI views.",
    "link" : "https://developer.apple.com/documentation/swiftui/preparing-views-for-localization"
  },
  {
    "id": 21090,
   "category": "SwiftUI",
    "title": "LocalizedStringKey",
    "subtitle": "The key used to look up an entry in a strings file or strings dictionary file.",
    "link" : "https://developer.apple.com/documentation/swiftui/localizedstringkey"
  },
  {
    "id": 21091,
   "category": "SwiftUI",
    "title": "Image",
    "subtitle": "A view that displays an image.",
    "link" : "https://developer.apple.com/documentation/swiftui/image"
  },
  {
    "id": 21092,
   "category": "SwiftUI",
    "title": "Image.Scale",
    "subtitle": "A scale to apply to vector images relative to text.",
    "link" : "https://developer.apple.com/documentation/swiftui/image/scale"
  },
  {
    "id": 21093,
   "category": "SwiftUI",
    "title": "Image.Orientation",
    "subtitle": "The orientation of an image.",
    "link" : "https://developer.apple.com/documentation/swiftui/image/orientation"
  },
  {
    "id": 21094,
   "category": "SwiftUI",
    "title": "Image.ResizingMode",
    "subtitle": "The modes that SwiftUI uses to resize an image to fit within its containing view.",
    "link" : "https://developer.apple.com/documentation/swiftui/image/resizingmode"
  },
  {
    "id": 21095,
   "category": "SwiftUI",
    "title": "AsyncImage",
    "subtitle": "A view that asynchronously loads and displays an image.",
    "link" : "https://developer.apple.com/documentation/swiftui/asyncimage"
  },
  {
    "id": 21096,
   "category": "SwiftUI",
    "title": "AsyncImagePhase",
    "subtitle": "The current phase of the asynchronous image loading operation.",
    "link" : "https://developer.apple.com/documentation/swiftui/asyncimagephase"
  },
  {
    "id": 21097,
   "category": "SwiftUI",
    "title": "SymbolVariants",
    "subtitle": "A variant of a symbol.",
    "link" : "https://developer.apple.com/documentation/swiftui/symbolvariants"
  },
  {
    "id": 21098,
   "category": "SwiftUI",
    "title": "SymbolRenderingMode",
    "subtitle": "A symbol rendering mode.",
    "link" : "https://developer.apple.com/documentation/swiftui/symbolrenderingmode"
  },
  {
    "id": 21099,
   "category": "SwiftUI",
    "title": "Button",
    "subtitle": "A control that initiates an action.",
    "link" : "https://developer.apple.com/documentation/swiftui/button"
  },
  {
    "id": 21100,
   "category": "SwiftUI",
    "title": "EditButton",
    "subtitle": "A button that toggles the edit mode environment value.",
    "link" : "https://developer.apple.com/documentation/swiftui/editbutton"
  },
  {
     "id": 21101,
     "category": "SwiftUI",
     "title": "PasteButton",
     "subtitle": "A system button that reads data from the pasteboard and delivers it to a closure.",
     "link" : "https://developer.apple.com/documentation/swiftui/pastebutton"
   },
   {
     "id": 21102,
     "category": "SwiftUI",
     "title": "Link",
     "subtitle": "A control for navigating to a URL.",
     "link" : "https://developer.apple.com/documentation/swiftui/link"
   },
   {
     "id": 21103,
    "category": "SwiftUI",
     "title": "Menu",
     "subtitle": "A control for presenting a menu of actions.",
     "link" : "https://developer.apple.com/documentation/swiftui/menu"
   },
   {
     "id": 21104,
    "category": "SwiftUI",
     "title": "Picker",
     "subtitle": "A control for selecting from a set of mutually exclusive values.",
     "link" : "https://developer.apple.com/documentation/swiftui/picker"
   },
   {
     "id": 21105,
    "category": "SwiftUI",
     "title": "DatePicker",
     "subtitle": "A control for selecting an absolute date.",
     "link" : "https://developer.apple.com/documentation/swiftui/datepicker"
   },
   {
     "id": 21106,
    "category": "SwiftUI",
     "title": "ColorPicker",
     "subtitle": "A control used to select a color from the system color picker UI.",
     "link" : "https://developer.apple.com/documentation/swiftui/colorpicker"
   },
   {
     "id": 21107,
    "category": "SwiftUI",
     "title": "ProgressView",
     "subtitle": "A view that shows the progress towards completion of a task.",
     "link" : "https://developer.apple.com/documentation/swiftui/progressview"
   },
   {
     "id": 21108,
    "category": "SwiftUI",
     "title": "Gauge",
     "subtitle": "A view that shows a value within a range.",
     "link" : "https://developer.apple.com/documentation/swiftui/gauge"
   },
   {
     "id": 21109,
    "category": "SwiftUI",
     "title": "ControlActiveState",
     "subtitle": "No overview available.",
     "link" : "https://developer.apple.com/documentation/swiftui/controlactivestate"
   },
   {
     "id": 21110,
    "category": "SwiftUI",
     "title": "ControlSize",
     "subtitle": "The size classes, like regular or small, that you can apply to controls within a view.",
     "link" : "https://developer.apple.com/documentation/swiftui/controlsize"
   },
   {
     "id": 21111,
    "category": "SwiftUI",
     "title": "Prominence",
     "subtitle": "A type indicating the prominence of a view hierarchy.",
     "link" : "https://developer.apple.com/documentation/swiftui/prominence"
   },
   {
     "id": 21112,
    "category": "SwiftUI",
     "title": "Visibility",
     "subtitle": "The visibility of a UI element, chosen automatically based on the platform, current context, and other factors.",
     "link" : "https://developer.apple.com/documentation/swiftui/visibility"
   },
   {
     "id": 21113,
    "category": "SwiftUI",
     "title": "Shape",
     "subtitle": "A 2D shape that you can use when drawing a view.",
     "link" : "https://developer.apple.com/documentation/swiftui/shape"
   },
   {
     "id": 21114,
    "category": "SwiftUI",
     "title": "InsettableShape",
     "subtitle": "A shape type that is able to inset itself to produce another shape.",
     "link" : "https://developer.apple.com/documentation/swiftui/insettableshape"
   },
   {
     "id": 21115,
    "category": "SwiftUI",
     "title": "ShapeRole",
     "subtitle": "Ways of styling a shape.",
     "link" : "https://developer.apple.com/documentation/swiftui/shaperole"
   },
   {
     "id": 21116,
    "category": "SwiftUI",
     "title": "StrokeStyle",
     "subtitle": "The characteristics of a stroke that traces a path.",
     "link" : "https://developer.apple.com/documentation/swiftui/strokestyle"
   },
   {
     "id": 21117,
    "category": "SwiftUI",
     "title": "FillStyle",
     "subtitle": "A style for rasterizing vector shapes.",
     "link" : "https://developer.apple.com/documentation/swiftui/fillstyle"
   },
   {
     "id": 21118,
    "category": "SwiftUI",
     "title": "Rectangle",
     "subtitle": "A rectangular shape aligned inside the frame of the view containing it.",
     "link" : "https://developer.apple.com/documentation/swiftui/rectangle"
   },
   {
     "id": 21119,
    "category": "SwiftUI",
     "title": "RoundedRectangle",
     "subtitle": "A rectangular shape with rounded corners, aligned inside the frame of the view containing it.",
     "link" : "https://developer.apple.com/documentation/swiftui/roundedrectangle"
   },
   {
     "id": 21120,
    "category": "SwiftUI",
     "title": "RoundedCornerStyle",
     "subtitle": "Defines the shape of a rounded rectangle’s corners.",
     "link" : "https://developer.apple.com/documentation/swiftui/roundedcornerstyle"
   },
   {
     "id": 21121,
    "category": "SwiftUI",
     "title": "Circle",
     "subtitle": "A circle centered on the frame of the view containing it.",
     "link" : "https://developer.apple.com/documentation/swiftui/circle"
   },
   {
     "id": 21122,
    "category": "SwiftUI",
     "title": "Ellipse",
     "subtitle": "An ellipse aligned inside the frame of the view containing it.",
     "link" : "https://developer.apple.com/documentation/swiftui/ellipse"
   },
   {
     "id": 21123,
    "category": "SwiftUI",
     "title": "Capsule",
     "subtitle": "A capsule shape aligned inside the frame of the view containing it.",
     "link" : "https://developer.apple.com/documentation/swiftui/capsule"
   },
   {
     "id": 21124,
    "category": "SwiftUI",
     "title": "Path",
     "subtitle": "The outline of a 2D shape.",
     "link" : "https://developer.apple.com/documentation/swiftui/path"
   },
   {
     "id": 21125,
    "category": "SwiftUI",
     "title": "ScaledShape",
     "subtitle": "A shape with a scale transform applied to it.",
     "link" : "https://developer.apple.com/documentation/swiftui/scaledshape"
   },
   {
     "id": 21126,
    "category": "SwiftUI",
     "title": "RotatedShape",
     "subtitle": "A shape with a rotation transform applied to it.",
     "link" : "https://developer.apple.com/documentation/swiftui/rotatedshape"
   },
   {
     "id": 21127,
    "category": "SwiftUI",
     "title": "OffsetShape",
     "subtitle": "A shape with a translation offset transform applied to it.",
     "link" : "https://developer.apple.com/documentation/swiftui/offsetshape"
   },
   {
     "id": 21128,
    "category": "SwiftUI",
     "title": "TransformedShape",
     "subtitle": "",
     "link" : ""
   },
   {
     "id": 21129,
    "category": "SwiftUI",
     "title": "TransformedShape",
     "subtitle": "A shape with an affine transform applied to it.",
     "link" : "https://developer.apple.com/documentation/swiftui/transformedshape"
   },
   {
     "id": 21130,
    "category": "SwiftUI",
     "title": "ContainerRelativeShape",
     "subtitle": "A shape that is replaced by an inset version of the current container shape. If no container shape was defined, is replaced by a rectangle.",
     "link" : "https://developer.apple.com/documentation/swiftui/containerrelativeshape"
   },
   {
     "id": 21131,
    "category": "SwiftUI",
     "title": "ShapeStyle",
     "subtitle": "A color or pattern to use when rendering a shape.",
     "link" : "https://developer.apple.com/documentation/swiftui/shapestyle"
   },
   {
     "id": 21132,
    "category": "SwiftUI",
     "title": "AnyShapeStyle",
     "subtitle": "A type-erased ShapeStyle value.",
     "link" : "https://developer.apple.com/documentation/swiftui/anyshapestyle"
   },
   {
     "id": 21133,
    "category": "SwiftUI",
     "title": "AngularGradient",
     "subtitle": "An angular gradient.",
     "link" : "https://developer.apple.com/documentation/swiftui/angulargradient"
   },
   {
     "id": 21134,
    "category": "SwiftUI",
     "title": "EllipticalGradient",
     "subtitle": "A radial gradient that draws an ellipse.",
     "link" : "https://developer.apple.com/documentation/swiftui/ellipticalgradient"
   },
   {
     "id": 21135,
    "category": "SwiftUI",
     "title": "LinearGradient",
     "subtitle": "A linear gradient.",
     "link" : "https://developer.apple.com/documentation/swiftui/lineargradient"
   },
   {
     "id": 21136,
    "category": "SwiftUI",
     "title": "RadialGradient",
     "subtitle": "A radial gradient.",
     "link" : "https://developer.apple.com/documentation/swiftui/radialgradient"
   },
   {
     "id": 21137,
    "category": "SwiftUI",
     "title": "Material",
     "subtitle": "A background material type.",
     "link" : "https://developer.apple.com/documentation/swiftui/material"
   },
   {
     "id": 21138,
    "category": "SwiftUI",
     "title": "ImagePaint",
     "subtitle": "A shape style that fills a shape by repeating a region of an image.",
     "link" : "https://developer.apple.com/documentation/swiftui/imagepaint"
   },
   {
     "id": 21139,
    "category": "SwiftUI",
     "title": "HierarchicalShapeStyle",
     "subtitle": "A shape style that maps to one of the numbered content styles.",
     "link" : "https://developer.apple.com/documentation/swiftui/hierarchicalshapestyle"
   },
   {
     "id": 21140,
    "category": "SwiftUI",
     "title": "ForegroundStyle",
     "subtitle": "The foreground style in the current context.",
     "link" : "https://developer.apple.com/documentation/swiftui/foregroundstyle"
   },
   {
     "id": 21141,
    "category": "SwiftUI",
     "title": "BackgroundStyle",
     "subtitle": "The background style in the current context.",
     "link" : "https://developer.apple.com/documentation/swiftui/backgroundstyle"
   },
   {
     "id": 21142,
    "category": "SwiftUI",
     "title": "SelectionShapeStyle",
     "subtitle": "A style used to visually indicate selection following platform conventional colors and behaviors.",
     "link" : "https://developer.apple.com/documentation/swiftui/selectionshapestyle"
   },
   {
     "id": 21143,
    "category": "SwiftUI",
     "title": "SeparatorShapeStyle",
     "subtitle": "A style appropriate for foreground separator or border lines.",
     "link" : "https://developer.apple.com/documentation/swiftui/separatorshapestyle"
   },
   {
     "id": 21144,
    "category": "SwiftUI",
     "title": "TintShapeStyle",
     "subtitle": "A style that reflects the current tint color.",
     "link" : "https://developer.apple.com/documentation/swiftui/tintshapestyle"
   },
   {
     "id": 21145,
    "category": "SwiftUI",
     "title": "Canvas",
     "subtitle": "A view type that supports immediate mode drawing.",
     "link" : "https://developer.apple.com/documentation/swiftui/canvas"
   },
   {
     "id": 21146,
    "category": "SwiftUI",
     "title": "GraphicsContext",
     "subtitle": "An immediate mode drawing destination, and its current state.",
     "link" : "https://developer.apple.com/documentation/swiftui/graphicscontext"
   },
   {
     "id": 21147,
    "category": "SwiftUI",
     "title": "Color",
     "subtitle": "A representation of a color that adapts to a given context.",
     "link" : "https://developer.apple.com/documentation/swiftui/color"
   },
   {
     "id": 21148,
    "category": "SwiftUI",
     "title": "Gradient",
     "subtitle": "A color gradient represented as an array of color stops, each having a parametric location value.",
     "link" : "https://developer.apple.com/documentation/swiftui/gradient"
   },
   {
     "id": 21149,
    "category": "SwiftUI",
     "title": "BlendMode",
     "subtitle": "Modes for compositing a view with overlapping content.",
     "link" : "https://developer.apple.com/documentation/swiftui/blendmode"
   },
   {
     "id": 21150,
    "category": "SwiftUI",
     "title": "ColorRenderingMode",
     "subtitle": "The set of possible working color spaces for color-compositing operations.",
     "link" : "https://developer.apple.com/documentation/swiftui/colorrenderingmode"
   },
   {
     "id": 21151,
    "category": "SwiftUI",
     "title": "ColorMatrix",
     "subtitle": "A matrix to use in an RGBA color transformation.",
     "link" : "https://developer.apple.com/documentation/swiftui/colormatrix"
   },
   {
     "id": 21152,
    "category": "SwiftUI",
     "title": "ContentMode",
     "subtitle": "Constants that define how a view’s content fills the available space.",
     "link" : "https://developer.apple.com/documentation/swiftui/contentmode"
   },
   {
     "id": 21153,
    "category": "SwiftUI",
     "title": "GeometryReader",
     "subtitle": "A container view that defines its content as a function of its own size and coordinate space.",
     "link" : "https://developer.apple.com/documentation/swiftui/geometryreader"
   },
   {
     "id": 21154,
    "category": "SwiftUI",
     "title": "GeometryProxy",
     "subtitle": "A proxy for access to the size and coordinate space (for anchor resolution) of the container view.",
     "link" : "https://developer.apple.com/documentation/swiftui/geometryproxy"
   },
   {
     "id": 21155,
    "category": "SwiftUI",
     "title": "Axis",
     "subtitle": "The horizontal or vertical dimension in a 2D coordinate system.",
     "link" : "https://developer.apple.com/documentation/swiftui/axis"
   },
   {
     "id": 21156,
    "category": "SwiftUI",
     "title": "Angle",
     "subtitle": "A geometric angle whose value you access in either radians or degrees.",
     "link" : "https://developer.apple.com/documentation/swiftui/angle"
   },
   {
     "id": 21157,
    "category": "SwiftUI",
     "title": "UnitPoint",
     "subtitle": "No overview available.",
     "link" : "https://developer.apple.com/documentation/swiftui/unitpoint"
   },
   {
     "id": 21158,
    "category": "SwiftUI",
     "title": "MatchedGeometryProperties",
     "subtitle": "A set of view properties that may be synchronized between views using the View.matchedGeometryEffect() function.",
     "link" : "https://developer.apple.com/documentation/swiftui/matchedgeometryproperties"
   },
   {
     "id": 21159,
    "category": "SwiftUI",
     "title": "Namespace",
     "subtitle": "A dynamic property type that allows access to a namespace defined by the persistent identity of the object containing the property (e.g. a view).",
     "link" : "https://developer.apple.com/documentation/swiftui/namespace"
   },
   {
     "id": 21160,
    "category": "SwiftUI",
     "title": "CoordinateSpace",
     "subtitle": "No overview available.",
     "link" : "https://developer.apple.com/documentation/swiftui/coordinatespace"
   },
   {
     "id": 21161,
    "category": "SwiftUI",
     "title": "ProjectionTransform",
     "subtitle": "No overview available.",
     "link" : "https://developer.apple.com/documentation/swiftui/projectiontransform"
   },
   {
     "id": 21162,
    "category": "SwiftUI",
     "title": "HStack",
     "subtitle": "A view that arranges its children in a horizontal line.",
     "link" : "https://developer.apple.com/documentation/swiftui/hstack"
   },
   {
     "id": 21163,
    "category": "SwiftUI",
     "title": "VStack",
     "subtitle": "A view that arranges its children in a vertical line.",
     "link" : "https://developer.apple.com/documentation/swiftui/vstack"
   },
   {
     "id": 21164,
    "category": "SwiftUI",
     "title": "ZStack",
     "subtitle": "A view that overlays its children, aligning them in both axes.",
     "link" : "https://developer.apple.com/documentation/swiftui/zstack"
   },
   {
     "id": 21165,
    "category": "SwiftUI",
     "title": "LazyHStack",
     "subtitle": "A view that arranges its children in a line that grows horizontally, creating items only as needed.",
     "link" : "https://developer.apple.com/documentation/swiftui/lazyhstack"
   },
   {
     "id": 21166,
    "category": "SwiftUI",
     "title": "LazyVStack",
     "subtitle": "A view that arranges its children in a line that grows vertically, creating items only as needed.",
     "link" : "https://developer.apple.com/documentation/swiftui/lazyvstack"
   },
   {
     "id": 21167,
    "category": "SwiftUI",
     "title": "PinnedScrollableViews",
     "subtitle": "A set of view types that may be pinned to the bounds of a scroll view.",
     "link" : "https://developer.apple.com/documentation/swiftui/pinnedscrollableviews"
   },
   {
     "id": 21168,
    "category": "SwiftUI",
     "title": "LazyHGrid",
     "subtitle": "A container view that arranges its child views in a grid that grows horizontally, creating items only as needed.",
     "link" : "https://developer.apple.com/documentation/swiftui/lazyhgrid"
   },
   {
     "id": 21169,
    "category": "SwiftUI",
     "title": "LazyVGrid",
     "subtitle": "A container view that arranges its child views in a grid that grows vertically, creating items only as needed.",
     "link" : "https://developer.apple.com/documentation/swiftui/lazyvgrid"
   },
   {
     "id": 21170,
    "category": "SwiftUI",
     "title": "GridItem",
     "subtitle": "A description of a single grid item, such as a row or a column.",
     "link" : "https://developer.apple.com/documentation/swiftui/griditem"
   },
   {
     "id": 21171,
    "category": "SwiftUI",
     "title": "Spacer",
     "subtitle": "A flexible space that expands along the major axis of its containing stack layout, or on both axes if not contained in a stack.",
     "link" : "https://developer.apple.com/documentation/swiftui/spacer"
   },
   {
     "id": 21172,
    "category": "SwiftUI",
     "title": "Divider",
     "subtitle": "A visual element that can be used to separate other content.",
     "link" : "https://developer.apple.com/documentation/swiftui/divider"
   },
   {
     "id": 21173,
    "category": "SwiftUI",
     "title": "Alignment",
     "subtitle": "An alignment in both axes.",
     "link" : "https://developer.apple.com/documentation/swiftui/alignment"
   },
   {
     "id": 21174,
    "category": "SwiftUI",
     "title": "HorizontalAlignment",
     "subtitle": "An alignment position along the horizontal axis.",
     "link" : "https://developer.apple.com/documentation/swiftui/horizontalalignment"
   },
   {
     "id": 21175,
    "category": "SwiftUI",
     "title": "VerticalAlignment",
     "subtitle": "An alignment position along the vertical axis.",
     "link" : "https://developer.apple.com/documentation/swiftui/verticalalignment"
   },
   {
     "id": 21176,
    "category": "SwiftUI",
     "title": "AlignmentID",
     "subtitle": "Types used to identify alignment guides.",
     "link" : "https://developer.apple.com/documentation/swiftui/alignmentid"
   },
   {
     "id": 21177,
    "category": "SwiftUI",
     "title": "ViewDimensions",
     "subtitle": "A view’s size and its alignment guides in its own coordinate space.",
     "link" : "https://developer.apple.com/documentation/swiftui/viewdimensions"
   },
   {
     "id": 21178,
    "category": "SwiftUI",
     "title": "Edge",
     "subtitle": "An enumeration to indicate one edge of a rectangle.",
     "link" : "https://developer.apple.com/documentation/swiftui/edge"
   },
   {
     "id": 21179,
    "category": "SwiftUI",
     "title": "HorizontalEdge",
     "subtitle": "An edge on the horizontal axis.",
     "link" : "https://developer.apple.com/documentation/swiftui/horizontaledge"
   },
   {
     "id": 21180,
    "category": "SwiftUI",
     "title": "VerticalEdge",
     "subtitle": "An edge on the vertical axis.",
     "link" : "https://developer.apple.com/documentation/swiftui/verticaledge"
   },
   {
     "id": 21181,
    "category": "SwiftUI",
     "title": "EdgeInsets",
     "subtitle": "The inset distances for the sides of a rectangle.",
     "link" : "https://developer.apple.com/documentation/swiftui/edgeinsets"
   },
   {
     "id": 21182,
    "category": "SwiftUI",
     "title": "SafeAreaRegions",
     "subtitle": "A set of symbolic safe area regions.",
     "link" : "https://developer.apple.com/documentation/swiftui/safearearegions"
   },
   {
     "id": 21183,
    "category": "SwiftUI",
     "title": "Anchor",
     "subtitle": "An opaque value derived from an anchor source and a particular view.",
     "link" : "https://developer.apple.com/documentation/swiftui/anchor"
   },
   {
     "id": 21184,
    "category": "SwiftUI",
     "title": "List",
     "subtitle": "A container that presents rows of data arranged in a single column, optionally providing the ability to select one or more members.",
     "link" : "https://developer.apple.com/documentation/swiftui/list"
   },
   {
     "id": 21185,
    "category": "SwiftUI",
     "title": "ListItemTint",
     "subtitle": "The configuration of a tint effect applied to content within a List.",
     "link" : "https://developer.apple.com/documentation/swiftui/listitemtint"
   },
   {
     "id": 21186,
    "category": "SwiftUI",
     "title": "Section",
     "subtitle": "A container view that you can use to add hierarchy to certain collection views.",
     "link" : "https://developer.apple.com/documentation/swiftui/section"
   },
   {
     "id": 21187,
    "category": "SwiftUI",
     "title": "ForEach",
     "subtitle": "A structure that computes views on demand from an underlying collection of identified data.",
     "link" : "https://developer.apple.com/documentation/swiftui/foreach"
   },
   {
     "id": 21188,
    "category": "SwiftUI",
     "title": "DynamicViewContent",
     "subtitle": "A type of view that generates views from an underlying collection of data.",
     "link" : "https://developer.apple.com/documentation/swiftui/dynamicviewcontent"
   },
   {
     "id": 21189,
    "category": "SwiftUI",
     "title": "Tables",
     "subtitle": "Display selectable, sortable data, arranged in rows and columns.",
     "link" : "https://developer.apple.com/documentation/swiftui/tables"
   },
   {
     "id": 21190,
    "category": "SwiftUI",
     "title": "Form",
     "subtitle": "A container for grouping controls used for data entry, such as in settings or inspectors.",
     "link" : "https://developer.apple.com/documentation/swiftui/form"
   },
   {
     "id": 21191,
    "category": "SwiftUI",
     "title": "Group",
     "subtitle": "A type that collects multiple instances of a content type — like views, scenes, or commands — into a single unit.",
     "link" : "https://developer.apple.com/documentation/swiftui/group"
   },
   {
     "id": 21192,
    "category": "SwiftUI",
     "title": "GroupBox",
     "subtitle": "A stylized view, with an optional label, that visually collects a logical grouping of content.",
     "link" : "https://developer.apple.com/documentation/swiftui/groupbox"
   },
   {
     "id": 21193,
    "category": "SwiftUI",
     "title": "ControlGroup",
     "subtitle": "A container view that displays semantically-related controls in a visually-appropriate manner for the context",
     "link" : "https://developer.apple.com/documentation/swiftui/controlgroup"
   },
   {
     "id": 21194,
    "category": "SwiftUI",
     "title": "ScrollView",
     "subtitle": "A scrollable view.",
     "link" : "https://developer.apple.com/documentation/swiftui/scrollview"
   },
   {
     "id": 21195,
    "category": "SwiftUI",
     "title": "ScrollViewReader",
     "subtitle": "A view that provides programmatic scrolling, by working with a proxy to scroll to known child views.",
     "link" : "https://developer.apple.com/documentation/swiftui/scrollviewreader"
   },
   {
     "id": 21196,
    "category": "SwiftUI",
     "title": "ScrollViewProxy",
     "subtitle": "A proxy value that supports programmatic scrolling of the scrollable views within a view hierarchy.",
     "link" : "https://developer.apple.com/documentation/swiftui/scrollviewproxy"
   },
   {
     "id": 21197,
    "category": "SwiftUI",
     "title": "NavigationView",
     "subtitle": "A view for presenting a stack of views that represents a visible path in a navigation hierarchy.",
     "link" : "https://developer.apple.com/documentation/swiftui/navigationview"
   },
   {
     "id": 21198,
    "category": "SwiftUI",
     "title": "NavigationLink",
     "subtitle": "A view that controls a navigation presentation.",
     "link" : "https://developer.apple.com/documentation/swiftui/navigationlink"
   },
   {
     "id": 21199,
    "category": "SwiftUI",
     "title": "NavigationBarItem",
     "subtitle": "A configuration for a navigation bar that represents a view at the top of a navigation stack.",
     "link" : "https://developer.apple.com/documentation/swiftui/navigationbaritem"
   },
   {
     "id": 21200,
    "category": "SwiftUI",
     "title": "OutlineGroup",
     "subtitle": "A structure that computes views and disclosure groups on demand from an underlying collection of tree-structured, identified data.",
     "link" : "https://developer.apple.com/documentation/swiftui/outlinegroup"
   },
   {
      "id": 21201,
      "category": "SwiftUI",
      "title": "DisclosureGroup",
      "subtitle": "A view that shows or hides another content view, based on the state of a disclosure control.",
      "link" : "https://developer.apple.com/documentation/swiftui/disclosuregroup"
    },
    {
      "id": 21202,
      "category": "SwiftUI",
      "title": "TabView",
      "subtitle": "A view that switches between multiple child views using interactive user interface elements.",
      "link" : "https://developer.apple.com/documentation/swiftui/tabview"
    },
    {
      "id": 21203,
     "category": "SwiftUI",
      "title": "HSplitView",
      "subtitle": "A layout container that arranges its children in a horizontal line and allows the user to resize them using dividers placed between them.",
      "link" : "https://developer.apple.com/documentation/swiftui/hsplitview"
    },
    {
      "id": 21204,
     "category": "SwiftUI",
      "title": "VSplitView",
      "subtitle": "A layout container that arranges its children in a vertical line and allows the user to resize them using dividers placed between them.",
      "link" : "https://developer.apple.com/documentation/swiftui/vsplitview"
    },
    {
      "id": 21205,
     "category": "SwiftUI",
      "title": "TimelineView",
      "subtitle": "A view that updates according to a schedule that you provide.",
      "link" : "https://developer.apple.com/documentation/swiftui/timelineview"
    },
    {
      "id": 21206,
     "category": "SwiftUI",
      "title": "TimelineSchedule",
      "subtitle": "A type that provides a sequence of dates for use as a schedule.",
      "link" : "https://developer.apple.com/documentation/swiftui/timelineschedule"
    },
    {
      "id": 21207,
     "category": "SwiftUI",
      "title": "ToolbarItem",
      "subtitle": "A model that represents an item which can be placed in the toolbar or navigation bar.",
      "link" : "https://developer.apple.com/documentation/swiftui/toolbaritem"
    },
    {
      "id": 21208,
     "category": "SwiftUI",
      "title": "ToolbarItemGroup",
      "subtitle": "A model that represents a group of ToolbarItems which can be placed in the toolbar or navigation bar.",
      "link" : "https://developer.apple.com/documentation/swiftui/toolbaritemgroup"
    },
    {
      "id": 21209,
     "category": "SwiftUI",
      "title": "ToolbarItemPlacement",
      "subtitle": "A structure that defines the placement of a toolbar item.",
      "link" : "https://developer.apple.com/documentation/swiftui/toolbaritemplacement"
    },
    {
      "id": 21210,
     "category": "SwiftUI",
      "title": "ToolbarContent",
      "subtitle": "Conforming types represent items that can be placed in various locations in a toolbar.",
      "link" : "https://developer.apple.com/documentation/swiftui/toolbarcontent"
    },
    {
      "id": 21211,
     "category": "SwiftUI",
      "title": "CustomizableToolbarContent",
      "subtitle": "Conforming types represent items that can be placed in various locations in a customizable toolbar.",
      "link" : "https://developer.apple.com/documentation/swiftui/customizabletoolbarcontent"
    },
    {
      "id": 21212,
     "category": "SwiftUI",
      "title": "ToolbarContentBuilder",
      "subtitle": "Constructs a toolbar item set from multi-expression closures.",
      "link" : "https://developer.apple.com/documentation/swiftui/toolbarcontentbuilder"
    },
    {
      "id": 21213,
     "category": "SwiftUI",
      "title": "TouchBar",
      "subtitle": "A container for a view that you can show in the Touch Bar.",
      "link" : "https://developer.apple.com/documentation/swiftui/touchbar"
    },
    {
      "id": 21214,
     "category": "SwiftUI",
      "title": "TouchBarItemPresence",
      "subtitle": "Options that affect user customization of the Touch Bar.",
      "link" : "https://developer.apple.com/documentation/swiftui/touchbaritempresence"
    },
    {
      "id": 21215,
     "category": "SwiftUI",
      "title": "NSHostingController",
      "subtitle": "An AppKit view controller that hosts SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/nshostingcontroller"
    },
    {
      "id": 21216,
     "category": "SwiftUI",
      "title": "NSHostingView",
      "subtitle": "An AppKit view that hosts a SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/nshostingview"
    },
    {
      "id": 21217,
     "category": "SwiftUI",
      "title": "NSHostingView",
      "subtitle": "An AppKit view that hosts a SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/nshostingview"
    },
    {
      "id": 21218,
     "category": "SwiftUI",
      "title": "UIHostingController",
      "subtitle": "A UIKit view controller that manages a SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/uihostingcontroller"
    },
    {
      "id": 21219,
     "category": "SwiftUI",
      "title": "WKHostingController",
      "subtitle": "A WatchKit interface controller that hosts a SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/wkhostingcontroller"
    },
    {
      "id": 21220,
     "category": "SwiftUI",
      "title": "WKUserNotificationHostingController",
      "subtitle": "A WatchKit user notification interface controller that hosts a SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/wkusernotificationhostingcontroller"
    },
    {
      "id": 21221,
     "category": "SwiftUI",
      "title": "NSViewRepresentable",
      "subtitle": "A wrapper that you use to integrate an AppKit view into your SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/nsviewrepresentable"
    },
    {
      "id": 21222,
     "category": "SwiftUI",
      "title": "NSViewRepresentableContext",
      "subtitle": "Contextual information about the state of the system that you use to create and update your AppKit view.",
      "link" : "https://developer.apple.com/documentation/swiftui/nsviewrepresentablecontext"
    },
    {
      "id": 21223,
     "category": "SwiftUI",
      "title": "NSViewControllerRepresentable",
      "subtitle": "A wrapper that you use to integrate an AppKit view controller into your SwiftUI interface.",
      "link" : "https://developer.apple.com/documentation/swiftui/nsviewcontrollerrepresentable"
    },
    {
      "id": 21224,
     "category": "SwiftUI",
      "title": "NSViewControllerRepresentableContext",
      "subtitle": "Contextual information about the state of the system that you use to create and update your AppKit view controller.",
      "link" : "https://developer.apple.com/documentation/swiftui/nsviewcontrollerrepresentablecontext"
    },
    {
      "id": 21225,
     "category": "SwiftUI",
      "title": "UIViewRepresentable",
      "subtitle": "A wrapper for a UIKit view that you use to integrate that view into your SwiftUI view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/uiviewrepresentable"
    },
    {
      "id": 21226,
     "category": "SwiftUI",
      "title": "UIViewRepresentableContext",
      "subtitle": "Contextual information about the state of the system that you use to create and update your UIKit view.",
      "link" : "https://developer.apple.com/documentation/swiftui/uiviewrepresentablecontext"
    },
    {
      "id": 21227,
     "category": "SwiftUI",
      "title": "UIViewControllerRepresentable",
      "subtitle": "A view that represents a UIKit view controller.",
      "link" : "https://developer.apple.com/documentation/swiftui/uiviewcontrollerrepresentable"
    },
    {
      "id": 21228,
     "category": "SwiftUI",
      "title": "UIViewControllerRepresentableContext",
      "subtitle": "Contextual information about the state of the system that you use to create and update your UIKit view controller.",
      "link" : "https://developer.apple.com/documentation/swiftui/uiviewcontrollerrepresentablecontext"
    },
    {
      "id": 21229,
     "category": "SwiftUI",
      "title": "WKInterfaceObjectRepresentable",
      "subtitle": "A view that represents a WatchKit interface object.",
      "link" : "https://developer.apple.com/documentation/swiftui/wkinterfaceobjectrepresentable"
    },
    {
      "id": 21230,
     "category": "SwiftUI",
      "title": "WKInterfaceObjectRepresentableContext",
      "subtitle": "Contextual information about the state of the system that you use to create and update your WatchKit interface object.",
      "link" : "https://developer.apple.com/documentation/swiftui/wkinterfaceobjectrepresentablecontext"
    },
    {
      "id": 21231,
     "category": "SwiftUI",
      "title": "FamilyActivityPicker",
      "subtitle": "A view in which users specify applications, web domains, and categories without revealing their choices to the app.",
      "link" : "https://developer.apple.com/documentation/FamilyControls/FamilyActivityPicker"
    },
    {
      "id": 21232,
     "category": "SwiftUI",
      "title": "SignInWithAppleButton",
      "subtitle": "The view that creates the Sign in with Apple button for display.",
      "link" : "https://developer.apple.com/documentation/authenticationservices/signinwithapplebutton"
    },
    {
      "id": 21233,
     "category": "SwiftUI",
      "title": "SceneView",
      "subtitle": "A SwiftUI view for displaying 3D SceneKit content.",
      "link" : "https://developer.apple.com/documentation/scenekit/sceneview"
    },
    {
      "id": 21234,
     "category": "SwiftUI",
      "title": "SpriteView",
      "subtitle": "A SwiftUI view that renders a SpriteKit scene.",
      "link" : "https://developer.apple.com/documentation/spritekit/spriteview"
    },
    {
      "id": 21235,
     "category": "SwiftUI",
      "title": "LocationButton",
      "subtitle": "A SwiftUI button that grants one-time location authorization.",
      "link" : "https://developer.apple.com/documentation/corelocationui/locationbutton"
    },
    {
      "id": 21236,
     "category": "SwiftUI",
      "title": "Map",
      "subtitle": "A view that displays an embedded map interface.",
      "link" : "https://developer.apple.com/documentation/mapkit/map"
    },
    {
      "id": 21237,
     "category": "SwiftUI",
      "title": "CameraView",
      "subtitle": "A SwiftUI view into which a video stream or an image snapshot is rendered.",
      "link" : "https://developer.apple.com/documentation/homekit/cameraview"
    },
    {
      "id": 21238,
     "category": "SwiftUI",
      "title": "NowPlayingView",
      "subtitle": "A view that displays the system’s Now Playing interface so that the user can control audio.",
      "link" : "https://developer.apple.com/documentation/watchkit/nowplayingview"
    },
    {
      "id": 21239,
     "category": "SwiftUI",
      "title": "VideoPlayer",
      "subtitle": "A view that displays content from a player and a native user interface to control playback.",
      "link" : "https://developer.apple.com/documentation/avkit/videoplayer"
    },
    {
      "id": 21240,
     "category": "SwiftUI",
      "title": "KeyboardShortcut",
      "subtitle": "Keyboard shortcuts describe combinations of keys on a keyboard that the user can press in order to activate a button or toggle.",
      "link" : "https://developer.apple.com/documentation/swiftui/keyboardshortcut"
    },
    {
      "id": 21241,
     "category": "SwiftUI",
      "title": "KeyEquivalent",
      "subtitle": "Key equivalents consist of a letter, punctuation, or function key that can be combined with an optional set of modifier keys to specify a keyboard shortcut.",
      "link" : "https://developer.apple.com/documentation/swiftui/keyequivalent"
    },
    {
      "id": 21242,
     "category": "SwiftUI",
      "title": "EventModifiers",
      "subtitle": "A set of key modifiers that you can add to a gesture.",
      "link" : "https://developer.apple.com/documentation/swiftui/eventmodifiers"
    },
    {
      "id": 21243,
     "category": "SwiftUI",
      "title": "HoverEffect",
      "subtitle": "An effect applied when the pointer hovers over a view.",
      "link" : "https://developer.apple.com/documentation/swiftui/hovereffect"
    },
    {
      "id": 21244,
     "category": "SwiftUI",
      "title": "FocusState",
      "subtitle": "A property wrapper type that can read and write a value that SwiftUI updates as the placement of focus within the scene changes.",
      "link" : "https://developer.apple.com/documentation/swiftui/focusstate"
    },
    {
      "id": 21245,
     "category": "SwiftUI",
      "title": "FocusedBinding",
      "subtitle": "A convenience property wrapper for observing and automatically unwrapping state bindings from the focused view or one of its ancestors.",
      "link" : "https://developer.apple.com/documentation/swiftui/focusedbinding"
    },
    {
      "id": 21246,
     "category": "SwiftUI",
      "title": "FocusedValue",
      "subtitle": "A property wrapper for observing values from the focused view or one of its ancestors.",
      "link" : "https://developer.apple.com/documentation/swiftui/focusedvalue"
    },
    {
      "id": 21247,
     "category": "SwiftUI",
      "title": "FocusedValues",
      "subtitle": "A collection of state exported by the focused view and its ancestors.",
      "link" : "https://developer.apple.com/documentation/swiftui/focusedvalues"
    },
    {
      "id": 21248,
     "category": "SwiftUI",
      "title": "FocusedValueKey",
      "subtitle": "A protocol for identifier types used when publishing and observing focused values.",
      "link" : "https://developer.apple.com/documentation/swiftui/focusedvaluekey"
    },
    {
      "id": 21249,
     "category": "SwiftUI",
      "title": "DropDelegate",
      "subtitle": "An interface that you implement to interact with a drop operation in a view modified to accept drops.",
      "link" : "https://developer.apple.com/documentation/swiftui/dropdelegate"
    },
    {
      "id": 21250,
     "category": "SwiftUI",
      "title": "DropInfo",
      "subtitle": "The current state of a drop.",
      "link" : "https://developer.apple.com/documentation/swiftui/dropinfo"
    },
    {
      "id": 21251,
     "category": "SwiftUI",
      "title": "SubmitTriggers",
      "subtitle": "A type that defines various triggers that result in the firing of a submission action.",
      "link" : "https://developer.apple.com/documentation/swiftui/submittriggers"
    },
    {
      "id": 21252,
     "category": "SwiftUI",
      "title": "SubmitLabel",
      "subtitle": "A semantic label describing the label of submission within a view hierarchy.",
      "link" : "https://developer.apple.com/documentation/swiftui/submitlabel"
    },
    {
      "id": 21253,
     "category": "SwiftUI",
      "title": "ContentShapeKinds",
      "subtitle": "A kind for the content shape of a view.",
      "link" : "https://developer.apple.com/documentation/swiftui/contentshapekinds"
    },
    {
      "id": 21254,
     "category": "SwiftUI",
      "title": "DigitalCrownRotationalSensitivity",
      "subtitle": "The amount of Digital Crown rotation needed to move between two integer numbers.",
      "link" : "https://developer.apple.com/documentation/swiftui/digitalcrownrotationalsensitivity"
    },
    {
      "id": 21255,
     "category": "SwiftUI",
      "title": "MoveCommandDirection",
      "subtitle": "Specifies the direction of an arrow key movement.",
      "link" : "https://developer.apple.com/documentation/swiftui/movecommanddirection"
    },
    {
      "id": 21256,
     "category": "SwiftUI",
      "title": "TapGesture",
      "subtitle": "A gesture that recognizes one or more taps.",
      "link" : "https://developer.apple.com/documentation/swiftui/tapgesture"
    },
    {
      "id": 21257,
     "category": "SwiftUI",
      "title": "LongPressGesture",
      "subtitle": "A gesture that succeeds when the user performs a long press.",
      "link" : "https://developer.apple.com/documentation/swiftui/longpressgesture"
    },
    {
      "id": 21258,
     "category": "SwiftUI",
      "title": "DragGesture",
      "subtitle": "A dragging motion that invokes an action as the drag-event sequence changes.",
      "link" : "https://developer.apple.com/documentation/swiftui/draggesture"
    },
    {
      "id": 21259,
     "category": "SwiftUI",
      "title": "MagnificationGesture",
      "subtitle": "A gesture that recognizes a magnification motion and tracks the amount of magnification.",
      "link" : "https://developer.apple.com/documentation/swiftui/magnificationgesture"
    },
    {
      "id": 21260,
     "category": "SwiftUI",
      "title": "RotationGesture",
      "subtitle": "A gesture that recognizes a rotation motion and tracks the angle of the rotation.",
      "link" : "https://developer.apple.com/documentation/swiftui/rotationgesture"
    },
    {
      "id": 21261,
     "category": "SwiftUI",
      "title": "Composing SwiftUI Gestures",
      "subtitle": "Combine gestures to create complex interactions.",
      "link" : "https://developer.apple.com/documentation/swiftui/composing-swiftui-gestures"
    },
    {
      "id": 21262,
     "category": "SwiftUI",
      "title": "SequenceGesture",
      "subtitle": "A gesture that’s a sequence of two gestures.",
      "link" : "https://developer.apple.com/documentation/swiftui/sequencegesture"
    },
    {
      "id": 21263,
     "category": "SwiftUI",
      "title": "SimultaneousGesture",
      "subtitle": "A gesture containing two gestures that can happen at the same time with neither of them preceding the other.",
      "link" : "https://developer.apple.com/documentation/swiftui/simultaneousgesture"
    },
    {
      "id": 21264,
     "category": "SwiftUI",
      "title": "ExclusiveGesture",
      "subtitle": "A gesture that consists of two gestures where only one of them can succeed.",
      "link" : "https://developer.apple.com/documentation/swiftui/exclusivegesture"
    },
    {
      "id": 21265,
     "category": "SwiftUI",
      "title": "Gesture",
      "subtitle": "An instance that matches a sequence of events to a gesture, and returns a stream of values for each of its states.",
      "link" : "https://developer.apple.com/documentation/swiftui/gesture"
    },
    {
      "id": 21266,
     "category": "SwiftUI",
      "title": "AnyGesture",
      "subtitle": "A type-erased gesture.",
      "link" : "https://developer.apple.com/documentation/swiftui/anygesture"
    },
    {
      "id": 21267,
     "category": "SwiftUI",
      "title": "GestureState",
      "subtitle": "A property wrapper type that updates a property while the user performs a gesture and resets the property back to its initial state when the gesture ends.",
      "link" : "https://developer.apple.com/documentation/swiftui/gesturestate"
    },
    {
      "id": 21268,
     "category": "SwiftUI",
      "title": "AnyGesture",
      "subtitle": "A type-erased gesture.",
      "link" : "https://developer.apple.com/documentation/swiftui/anygesture"
    },
    {
      "id": 21269,
     "category": "SwiftUI",
      "title": "GestureState",
      "subtitle": "A property wrapper type that updates a property while the user performs a gesture and resets the property back to its initial state when the gesture ends.",
      "link" : "https://developer.apple.com/documentation/swiftui/gesturestate"
    },
    {
      "id": 21270,
     "category": "SwiftUI",
      "title": "GestureStateGesture",
      "subtitle": "A gesture that updates the state provided by a gesture’s updating callback.",
      "link" : "https://developer.apple.com/documentation/swiftui/gesturestategesture"
    },
    {
      "id": 21271,
     "category": "SwiftUI",
      "title": "GestureMask",
      "subtitle": "Options that control how adding a gesture to a view affects other gestures recognized by the view and its subviews.",
      "link" : "https://developer.apple.com/documentation/swiftui/gesturemask"
    },
    {
      "id": 21272,
     "category": "SwiftUI",
      "title": "withAnimation(_:_:)",
      "subtitle": "Returns the result of recomputing the view’s body with the provided animation.",
      "link" : "https://developer.apple.com/documentation/swiftui/withanimation(_:_:)"
    },
    {
      "id": 21273,
     "category": "SwiftUI",
      "title": "Animation",
      "subtitle": "No overview available.",
      "link" : "https://developer.apple.com/documentation/swiftui/animation"
    },
    {
      "id": 21274,
     "category": "SwiftUI",
      "title": "Animatable",
      "subtitle": "A type that describes how to animate a property of a view.",
      "link" : "https://developer.apple.com/documentation/swiftui/animatable"
    },
    {
      "id": 21275,
     "category": "SwiftUI",
      "title": "AnimatablePair",
      "subtitle": "A pair of animatable values, which is itself animatable.",
      "link" : "https://developer.apple.com/documentation/swiftui/animatablepair"
    },
    {
      "id": 21276,
     "category": "SwiftUI",
      "title": "VectorArithmetic",
      "subtitle": "A type that can serve as the animatable data of an animatable type.",
      "link" : "https://developer.apple.com/documentation/swiftui/vectorarithmetic"
    },
    {
      "id": 21277,
     "category": "SwiftUI",
      "title": "EmptyAnimatableData",
      "subtitle": "An empty type for animatable data.",
      "link" : "https://developer.apple.com/documentation/swiftui/emptyanimatabledata"
    },
    {
      "id": 21278,
     "category": "SwiftUI",
      "title": "GeometryEffect",
      "subtitle": "An effect that changes the visual appearance of a view, largely without changing its ancestors or descendants.",
      "link" : "https://developer.apple.com/documentation/swiftui/geometryeffect"
    },
    {
      "id": 21279,
     "category": "SwiftUI",
      "title": "AnyTransition",
      "subtitle": "A type-erased transition.",
      "link" : "https://developer.apple.com/documentation/swiftui/anytransition"
    },
    {
      "id": 21280,
     "category": "SwiftUI",
      "title": "withTransaction(_:_:)",
      "subtitle": "Executes a closure with the specified transaction and returns the result.",
      "link" : "https://developer.apple.com/documentation/swiftui/withtransaction(_:_:)"
    },
    {
      "id": 21281,
     "category": "SwiftUI",
      "title": "Transaction",
      "subtitle": "The context of the current state-processing update.",
      "link" : "https://developer.apple.com/documentation/swiftui/transaction"
    },
    {
      "id": 21282,
     "category": "SwiftUI",
      "title": "PreviewProvider",
      "subtitle": "A type that produces view previews in Xcode.",
      "link" : "https://developer.apple.com/documentation/swiftui/previewprovider"
    },
    {
      "id": 21283,
     "category": "SwiftUI",
      "title": "PreviewPlatform",
      "subtitle": "Platforms that can run the preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/previewplatform"
    },
    {
      "id": 21284,
     "category": "SwiftUI",
      "title": "previewDisplayName(_:)",
      "subtitle": "Sets a user visible name to show in the canvas for a preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/view/previewdisplayname(_:)"
    },
    {
      "id": 21285,
     "category": "SwiftUI",
      "title": "previewDevice(_:)",
      "subtitle": "Overrides the device for a preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/view/previewdevice(_:)"
    },
    {
      "id": 21286,
     "category": "SwiftUI",
      "title": "PreviewDevice",
      "subtitle": "A simulator device that runs a preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/previewdevice"
    },
    {
      "id": 21287,
     "category": "SwiftUI",
      "title": "previewLayout(_:)",
      "subtitle": "Overrides the size of the container for the preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/view/previewlayout(_:)"
    },
    {
      "id": 21288,
     "category": "SwiftUI",
      "title": "PreviewLayout",
      "subtitle": "A size constraint for a preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/previewlayout"
    },
    {
      "id": 21289,
     "category": "SwiftUI",
      "title": "previewInterfaceOrientation(_:)",
      "subtitle": "Overrides the orientation of the preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/view/previewinterfaceorientation(_:)"
    },
    {
      "id": 21290,
     "category": "SwiftUI",
      "title": "InterfaceOrientation",
      "subtitle": "The orientation of the interface from the user’s perspective.",
      "link" : "https://developer.apple.com/documentation/swiftui/interfaceorientation"
    },
    {
      "id": 21291,
     "category": "SwiftUI",
      "title": "previewContext(_:)",
      "subtitle": "Declares a context for the preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/view/previewcontext(_:)"
    },
    {
      "id": 21292,
     "category": "SwiftUI",
      "title": "PreviewContext",
      "subtitle": "A context type for use with a preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/previewcontext"
    },
    {
      "id": 21293,
     "category": "SwiftUI",
      "title": "PreviewContext",
      "subtitle": "A context type for use with a preview.",
      "link" : "https://developer.apple.com/documentation/swiftui/previewcontext"
    },
    {
      "id": 21294,
     "category": "SwiftUI",
      "title": "PreviewContextKey",
      "subtitle": "A key type for a preview context.",
      "link" : "https://developer.apple.com/documentation/swiftui/previewcontextkey"
    },
    {
      "id": 21295,
     "category": "SwiftUI",
      "title": "LibraryContentProvider",
      "subtitle": "A source of Xcode library and code completion content.",
      "link" : "https://developer.apple.com/documentation/DeveloperToolsSupport/LibraryContentProvider"
    },
    {
      "id": 21296,
     "category": "SwiftUI",
      "title": "LibraryItem",
      "subtitle": "A single item to add to the Xcode library.",
      "link" : "https://developer.apple.com/documentation/DeveloperToolsSupport/LibraryItem"
    },
    {
       "id": 22001,
       "category": "UIKit",
       "title": "UIApplication",
       "subtitle": "The centralized point of control and coordination for apps running in iOS.",
       "link" : "https://developer.apple.com/documentation/uikit/uiapplication"
     },
     {
       "id": 22002,
       "category": "UIKit",
       "title": "UIApplicationDelegate",
       "subtitle": "A set of methods to manage shared behaviors for your app.",
       "link" : "https://developer.apple.com/documentation/uikit/uiapplicationdelegate"
     },
     {
       "id": 22003,
      "category": "UIKit",
       "title": "Scenes",
       "subtitle": "Manage multiple instances of your app’s UI simultaneously, and direct resources to the appropriate instance of your UI.",
       "link" : "https://developer.apple.com/documentation/uikit/app_and_environment/scenes"
     },
     {
       "id": 22004,
      "category": "UIKit",
       "title": "Multitasking on iPad",
       "subtitle": "Implement multitasking APIs to seamlessly integrate your app with iPadOS.",
       "link" : "https://developer.apple.com/documentation/uikit/app_and_environment/multitasking_on_ipad"
     },
     {
       "id": 22005,
      "category": "UIKit",
       "title": "UIDevice",
       "subtitle": "A representation of the current device.",
       "link" : "https://developer.apple.com/documentation/uikit/uidevice"
     },
     {
       "id": 22006,
      "category": "UIKit",
       "title": "UIStatusBarManager",
       "subtitle": "An object that describes the configuration of the status bar.",
       "link" : "https://developer.apple.com/documentation/uikit/uistatusbarmanager"
     },
     {
       "id": 22007,
      "category": "UIKit",
       "title": "UITraitCollection",
       "subtitle": "The iOS interface environment for your app, including traits such as horizontal and vertical size class, display scale, and user interface idiom.",
       "link" : "https://developer.apple.com/documentation/uikit/uitraitcollection"
     },
     {
       "id": 22008,
      "category": "UIKit",
       "title": "UITraitEnvironment",
       "subtitle": "A set of methods that makes the iOS interface environment available to your app.",
       "link" : "https://developer.apple.com/documentation/uikit/uitraitenvironment"
     },
     {
       "id": 22009,
      "category": "UIKit",
       "title": "UITraitEnvironment",
       "subtitle": "A set of methods that makes the iOS interface environment available to your app.",
       "link" : "https://developer.apple.com/documentation/uikit/uitraitenvironment"
     },
     {
       "id": 22010,
      "category": "UIKit",
       "title": "UIAdaptivePresentationControllerDelegate",
       "subtitle": "A set of methods that, in conjunction with a presentation controller, determine how to respond to trait changes in your app.",
       "link" : "https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate"
     },
     {
       "id": 22011,
      "category": "UIKit",
       "title": "UIContentContainer",
       "subtitle": "A set of methods for adapting the contents of your view controllers to size and trait changes.",
       "link" : "https://developer.apple.com/documentation/uikit/uicontentcontainer"
     },
     {
       "id": 22012,
      "category": "UIKit",
       "title": "UIGuidedAccessRestrictionDelegate",
       "subtitle": "A set of methods you use to add custom restrictions for the Guided Access feature in iOS.",
       "link" : "https://developer.apple.com/documentation/uikit/uiguidedaccessrestrictiondelegate"
     },
     {
       "id": 22013,
      "category": "UIKit",
       "title": "guidedAccessRestrictionState(forIdentifier:)",
       "subtitle": "Returns the restriction state for the specified guided access restriction.",
       "link" : "https://developer.apple.com/documentation/uikit/uiaccessibility/1621153-guidedaccessrestrictionstate"
     },
     {
       "id": 22014,
      "category": "UIKit",
       "title": "UIApplicationMain(_:_:_:_:)",
       "subtitle": "Creates the application object and the application delegate and sets up the event cycle.",
       "link" : "https://developer.apple.com/documentation/uikit/1622933-uiapplicationmain"
     }
]
